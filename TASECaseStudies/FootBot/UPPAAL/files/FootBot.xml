<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>
clock GlobalTime;
clock cycle;

int end_S_num = 0;
const int S_num = 1;

broadcast chan wait_p;
broadcast chan end;

broadcast chan registerRead;
broadcast chan registerWrite;

broadcast chan registerRead_CFootBot_C;
broadcast chan registerWrite_C_CFootBot;

broadcast chan registerRead_Movement_S;
broadcast chan registerWrite_S_Movement;

broadcast chan registerWrite_SimSMovement;
broadcast chan startexec_SimSMovement;
broadcast chan endexec_SimSMovement;

// event obstacle in ObstacleI (input)
struct {
    bool b;
} obstacle_FootBot, obstacle_CFootBot, obstacle_Movement, obstacle_SimSMovement; 
bool obstacle_SimSMovement_Movement, obstacle_Movement_CFootBot, obstacle_CFootBot_FootBot;

// op move in MovementI (output)
struct {
    bool b;
    int ls;
    int as;
} move_FootBot, move_CFootBot, move_Movement, move_SimSMovement;
bool move_SimSMovement_Movement, move_Movement_CFootBot, move_CFootBot_FootBot;
int move_CFootBot_n, move_Movement_n, move_SimSMovement_n;

// op stop in MovementI (output)
struct {
    bool b;
} stop_FootBot, stop_CFootBot, stop_Movement, stop_SimSMovement;
bool stop_SimSMovement_Movement, stop_Movement_CFootBot, stop_CFootBot_FootBot;
int stop_CFootBot_n, stop_Movement_n, stop_SimSMovement_n;


</declaration>
	<template>
		<name>CFootBot_cycle</name>
		<declaration>const int period = 1;

void Init(){
    move_CFootBot_n = 0;
    stop_CFootBot_n = 0;
}

bool ifConflict(){
    return move_CFootBot_n&gt;1 || stop_CFootBot_n&gt;1;
}

void TakeInput(int i){
    if(i==0) obstacle_FootBot.b = false;
    else if(i==1) obstacle_FootBot.b = true;
    obstacle_CFootBot = obstacle_FootBot;
}

void GiveOutput(){
    if(move_CFootBot_FootBot==true){
        move_FootBot = move_CFootBot;
        move_CFootBot_FootBot=false;
        //move_CFootBot.b=false;
    }
    if(stop_CFootBot_FootBot==true){
        stop_FootBot = stop_CFootBot;
        stop_CFootBot_FootBot=false;
        //stop_CFootBot.b=false;
    }
}</declaration>
		<location id="id0" x="-484" y="-68">
			<name x="-493" y="-102">m0</name>
			<committed/>
		</location>
		<location id="id1" x="-357" y="-68">
			<name x="-367" y="-102">m1</name>
			<committed/>
		</location>
		<location id="id2" x="-136" y="-68">
			<name x="-144" y="-102">m2</name>
			<label kind="invariant" x="-246" y="-59">cycle&lt;=period</label>
		</location>
		<location id="id3" x="-136" y="-170">
			<name x="-119" y="-178">m3</name>
			<committed/>
		</location>
		<location id="id4" x="76" y="-68">
			<name x="68" y="-59">End</name>
		</location>
		<location id="id5" x="-136" y="-221">
			<name x="-119" y="-230">Output_Conflict</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-340" y="-85">registerRead_CFootBot_C!</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id2"/>
			<label kind="guard" x="-85" y="-42">end_S_num+1&lt;S_num</label>
			<label kind="synchronisation" x="-85" y="-25">end?</label>
			<label kind="assignment" x="-85" y="-8">end_S_num += 1</label>
			<nail x="-85" y="-42"/>
			<nail x="-110" y="-17"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id5"/>
			<label kind="guard" x="-127" y="-204">ifConflict()==true</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-110" y="-102">end_S_num+1&gt;=S_num</label>
			<label kind="synchronisation" x="-110" y="-85">end?</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id0"/>
			<label kind="guard" x="-246" y="-42">cycle==period</label>
			<label kind="synchronisation" x="-246" y="-25">wait_p!</label>
			<label kind="assignment" x="-246" y="-8">cycle=0</label>
			<nail x="-136" y="8"/>
			<nail x="-484" y="8"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-110" y="-153">ifConflict()==false</label>
			<label kind="synchronisation" x="-110" y="-136">registerWrite!</label>
			<label kind="assignment" x="-110" y="-119">GiveOutput()</label>
			<nail x="-110" y="-119"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="-340" y="-144">registerWrite_C_CFootBot?</label>
			<nail x="-161" y="-119"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="select" x="-467" y="-119">i: int[0,1]</label>
			<label kind="assignment" x="-467" y="-102">Init(),
TakeInput(i)</label>
		</transition>
	</template>
	<template>
		<name>Movement_cycle</name>
		<declaration>void Init(){
    move_Movement_n = 0;
    stop_Movement_n = 0;
}

bool ifConflict(){
    return move_Movement_n&gt;1 || stop_Movement_n&gt;1;
}

void TakeInput(){
    obstacle_Movement = obstacle_CFootBot;
    
}

void GiveOutput(){
    if(move_Movement_CFootBot==true){
        move_CFootBot = move_Movement;
        move_CFootBot_n += 1;
        move_CFootBot_FootBot=true;
        move_Movement_CFootBot=false;
        //move_Movement.b=false;
    }
    if(stop_Movement_CFootBot==true){
        stop_CFootBot = stop_Movement;
        stop_CFootBot_n += 1;
        stop_CFootBot_FootBot=true;
        stop_Movement_CFootBot=false;
        //stop_Movement.b=false;
    }
}</declaration>
		<location id="id6" x="68" y="136">
			<name x="59" y="102">c0</name>
		</location>
		<location id="id7" x="442" y="136">
			<name x="433" y="102">c2</name>
		</location>
		<location id="id8" x="195" y="136">
			<name x="185" y="102">c1</name>
			<committed/>
		</location>
		<location id="id9" x="442" y="34">
			<name x="458" y="25">c3</name>
			<committed/>
		</location>
		<location id="id10" x="663" y="136">
			<name x="646" y="144">End</name>
		</location>
		<location id="id11" x="442" y="-17">
			<name x="459" y="-25">Output_Conflict</name>
		</location>
		<init ref="id6"/>
		<transition>
			<source ref="id7"/>
			<target ref="id7"/>
			<label kind="guard" x="510" y="161">end_S_num+1&lt;S_num</label>
			<label kind="synchronisation" x="501" y="178">end?</label>
			<nail x="484" y="195"/>
			<nail x="510" y="161"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id11"/>
			<label kind="guard" x="450" y="8">ifConflict()==true</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id10"/>
			<label kind="guard" x="467" y="102">end_S_num+1&gt;=S_num</label>
			<label kind="synchronisation" x="467" y="119">end?</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="382" y="161">wait_p?</label>
			<nail x="442" y="187"/>
			<nail x="68" y="187"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id7"/>
			<label kind="guard" x="467" y="51">ifConflict()==false</label>
			<label kind="synchronisation" x="467" y="68">registerWrite_C_CFootBot!</label>
			<label kind="assignment" x="467" y="85">GiveOutput()</label>
			<nail x="467" y="85"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="229" y="60">registerWrite_S_Movement?</label>
			<nail x="416" y="85"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="221" y="119">registerRead_Movement_S!</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="76" y="85">registerRead_CFootBot_C?</label>
			<label kind="assignment" x="85" y="102">Init(),
TakeInput()</label>
		</transition>
	</template>
	<template>
		<name>SimSMovement_cycle</name>
		<declaration>void Init(){
    move_SimSMovement_n = 0;
    stop_SimSMovement_n = 0;
}

bool ifConflict(){
    return move_SimSMovement_n&gt;1 || stop_SimSMovement_n&gt;1;
}

void TakeInput(){
    obstacle_SimSMovement = obstacle_Movement;
}

void GiveOutput(){
    if(move_SimSMovement_Movement==true){
        move_Movement = move_SimSMovement;
        move_Movement_n += 1;
        move_Movement_CFootBot=true;
        move_SimSMovement_Movement=false;
        //move_SimSMovement.b=false;
    }
    if(stop_SimSMovement_Movement==true){
        stop_Movement = stop_SimSMovement;
        stop_Movement_n += 1;
        stop_Movement_CFootBot=true;
        stop_SimSMovement_Movement=false;
    }
}</declaration>
		<location id="id12" x="-221" y="34">
			<name x="-212" y="51">s0</name>
		</location>
		<location id="id13" x="-102" y="34">
			<name x="-110" y="51">s1</name>
			<committed/>
		</location>
		<location id="id14" x="119" y="34">
			<name x="136" y="25">s2</name>
		</location>
		<location id="id15" x="119" y="93">
			<name x="93" y="67">s4</name>
		</location>
		<location id="id16" x="119" y="-51">
			<name x="136" y="-59">s3</name>
			<committed/>
		</location>
		<location id="id17" x="323" y="93">
			<name x="340" y="76">End</name>
		</location>
		<location id="id18" x="119" y="-102">
			<name x="136" y="-110">Output_Conflict</name>
		</location>
		<init ref="id12"/>
		<transition>
			<source ref="id15"/>
			<target ref="id15"/>
			<label kind="guard" x="178" y="110">end_S_num+1&lt;S_num</label>
			<label kind="synchronisation" x="170" y="127">end?</label>
			<nail x="153" y="144"/>
			<nail x="178" y="110"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id18"/>
			<label kind="guard" x="127" y="-85">ifConflict()==true</label>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id17"/>
			<label kind="guard" x="161" y="59">end_S_num+1&gt;=S_num</label>
			<label kind="synchronisation" x="170" y="76">end?</label>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="25" y="68">wait_p?</label>
			<nail x="-221" y="93"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id14"/>
			<label kind="guard" x="144" y="-34">ifConflict()==false</label>
			<label kind="synchronisation" x="144" y="-17">registerWrite_S_Movement!</label>
			<label kind="assignment" x="144" y="0">GiveOutput()</label>
			<nail x="144" y="-8"/>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id16"/>
			<label kind="synchronisation" x="-102" y="-34">registerWrite_SimSMovement?</label>
			<nail x="93" y="-8"/>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id15"/>
			<label kind="synchronisation" x="127" y="42">endexec_SimSMovement?</label>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="-85" y="17">startexec_SimSMovement!</label>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-221" y="-17">registerRead_Movement_S?</label>
			<label kind="assignment" x="-204" y="0">Init(),
TakeInput()</label>
		</transition>
	</template>
	<template>
		<name x="5" y="5">SimSMovement</name>
		<declaration>
const int lv = 0;    //linear speed
const int PI = 90;    //robot need to turn PI degrees 
const int av = 5;    //angular speed
clock MBC;
</declaration>
		<location id="id19" x="-17153" y="-1207">
			<name x="-17144" y="-1198">entering_SMoving</name>
			<urgent/>
		</location>
		<location id="id20" x="-17153" y="-1054">
			<name x="-17136" y="-1062">entered_SMoving</name>
			<urgent/>
		</location>
		<location id="id21" x="-17000" y="-1207">
			<name x="-16991" y="-1198">j1</name>
			<committed/>
		</location>
		<location id="id22" x="-16405" y="-1207">
			<name x="-16388" y="-1216">entered_STurning</name>
			<urgent/>
		</location>
		<location id="id23" x="-16940" y="-909">
			<name x="-16932" y="-901">j0</name>
			<committed/>
		</location>
		<location id="id24" x="-16464" y="-909">
			<name x="-16532" y="-943">entered_Waiting</name>
			<urgent/>
		</location>
		<location id="id25" x="-16405" y="-977">
			<name x="-16388" y="-986">exec2</name>
		</location>
		<location id="id26" x="-17153" y="-952">
			<name x="-17144" y="-943">entered_DMoving</name>
			<urgent/>
		</location>
		<location id="id27" x="-16558" y="-1207">
			<name x="-16660" y="-1190">exited_DTurning</name>
			<urgent/>
		</location>
		<location id="id28" x="-17153" y="-1309">
			<name x="-17136" y="-1317">Init</name>
		</location>
		<location id="id29" x="-17153" y="-841">
			<name x="-17144" y="-833">exec1</name>
		</location>
		<location id="id30" x="-16779" y="-1207">
			<name x="-16796" y="-1190">exec3</name>
		</location>
		<location id="id31" x="-16405" y="-1054">
			<name x="-16388" y="-1062">entering_STurning</name>
			<urgent/>
		</location>
		<location id="id32" x="-17153" y="-1249">
			<name x="-17136" y="-1257">i0</name>
		</location>
		<location id="id33" x="-17153" y="-1003">
			<name x="-17136" y="-1011">exited_SMoving</name>
			<urgent/>
		</location>
		<location id="id34" x="-17153" y="-901">
			<name x="-17136" y="-909">exited_DMoving</name>
			<urgent/>
		</location>
		<location id="id35" x="-16736" y="-909">
			<urgent/>
		</location>
		<location id="id36" x="-16405" y="-909">
			<name x="-16456" y="-892">exited_Waiting</name>
			<urgent/>
		</location>
		<location id="id37" x="-16456" y="-1207">
			<name x="-16490" y="-1241">exited_STurning</name>
			<urgent/>
		</location>
		<location id="id38" x="-16507" y="-1207">
			<name x="-16541" y="-1190">entered_DTurning</name>
			<urgent/>
		</location>
		<init ref="id28"/>
		<transition>
			<source ref="id38"/>
			<target ref="id27"/>
		</transition>
		<transition>
			<source ref="id37"/>
			<target ref="id38"/>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id36"/>
		</transition>
		<transition>
			<source ref="id35"/>
			<target ref="id24"/>
			<label kind="synchronisation" x="-16719" y="-926">registerWrite_SimSMovement!</label>
			<label kind="assignment" x="-16719" y="-909">stop_SimSMovement.b=true,
stop_SimSMovement_n += 1,
stop_SimSMovement_Movement=true</label>
		</transition>
		<transition>
			<source ref="id34"/>
			<target ref="id29"/>
			<label kind="synchronisation" x="-17144" y="-884">endexec_SimSMovement!</label>
		</transition>
		<transition>
			<source ref="id33"/>
			<target ref="id26"/>
		</transition>
		<transition>
			<source ref="id32"/>
			<target ref="id19"/>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id31"/>
			<label kind="synchronisation" x="-16396" y="-1020">startexec_SimSMovement?</label>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id19"/>
			<label kind="guard" x="-17119" y="-1224">MBC&gt;=PI/av</label>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id21"/>
			<label kind="synchronisation" x="-16974" y="-1224">startexec_SimSMovement?</label>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id30"/>
			<label kind="synchronisation" x="-16753" y="-1224">endexec_SimSMovement!</label>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id23"/>
			<label kind="synchronisation" x="-17136" y="-858">startexec_SimSMovement?</label>
			<nail x="-16940" y="-841"/>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id34"/>
		</transition>
		<transition>
			<source ref="id28"/>
			<target ref="id32"/>
			<label kind="synchronisation" x="-17144" y="-1292">startexec_SimSMovement?</label>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id38"/>
			<label kind="guard" x="-16991" y="-1258">MBC&lt;PI/av</label>
			<nail x="-17000" y="-1241"/>
			<nail x="-16507" y="-1241"/>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id37"/>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id26"/>
			<label kind="guard" x="-17127" y="-969">not obstacle_SimSMovement.b==true</label>
			<nail x="-16940" y="-952"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id33"/>
		</transition>
		<transition>
			<source ref="id31"/>
			<target ref="id22"/>
			<label kind="synchronisation" x="-16396" y="-1181">registerWrite_SimSMovement!</label>
			<label kind="assignment" x="-16396" y="-1164">move_SimSMovement.b=true,
move_SimSMovement.ls=0,
move_SimSMovement.as=av,
move_SimSMovement_n += 1,
move_SimSMovement_Movement=true</label>
		</transition>
		<transition>
			<source ref="id36"/>
			<target ref="id25"/>
			<label kind="synchronisation" x="-16396" y="-952">endexec_SimSMovement!</label>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id35"/>
			<label kind="guard" x="-16932" y="-943">obstacle_SimSMovement.b==true</label>
			<label kind="assignment" x="-16923" y="-926">MBC=0</label>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id20"/>
			<label kind="synchronisation" x="-17144" y="-1173">registerWrite_SimSMovement!</label>
			<label kind="assignment" x="-17144" y="-1156">move_SimSMovement.b=true,
move_SimSMovement.ls=lv,
move_SimSMovement.as=0,
move_SimSMovement_n += 1,
move_SimSMovement_Movement=true</label>
		</transition>
	</template>
	<system>system CFootBot_cycle,Movement_cycle,SimSMovement_cycle,SimSMovement;</system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] not (CFootBot_cycle.Output_Conflict or Movement_cycle.Output_Conflict or SimSMovement_cycle.Output_Conflict)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; SimSMovement.entered_SMoving</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; SimSMovement.entered_DMoving</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; SimSMovement.entered_Waiting</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; SimSMovement.entered_STurning</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; SimSMovement.entered_DTurning</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
