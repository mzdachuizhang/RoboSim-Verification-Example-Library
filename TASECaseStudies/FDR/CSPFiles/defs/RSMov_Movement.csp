module RSMov_Movement
exports
	-- definition of the behaviour of state machines (default, optimised, visible, visible and optimised)
	external prioritise
	transparent wbisim
	transparent sbisim
	transparent dbisim

	-- flow channels
	channel internal__ : TIDS
	channel enteredV, enterV, exitV, exitedV : SIDS
	channel enter, entered: SIDS.SIDS
	channel exit,exited: SIDS.SIDS
	
	-- RoboSim channels
	channel endexec
	channel endexec__ : TIDS
	channel startexec
	channel terminate
	
	-- declaring registerRead/Write datatypes
	datatype RegisterDataInput = i_obstacle.Bool.RSMov_Position
		| i_neighbours.Bool.core_nat
	
	
	datatype RegisterDataOutput = o_move.core_real.core_real
	
	
	nametype RegisterOutputs = {|
	o_move|}
	
	nametype RegisterInputs = {|
	i_obstacle,
	i_neighbours|}
	
	channel registerRead 	: RegisterDataInput
	channel registerWrite 	: RegisterDataOutput
	
	-- variable channels
	channel get_n, set_n: core_nat
	channel get_p, set_p: RSMov_Position
	channel get_turned, set_turned: core_boolean
	channel get_obstacle : Bool.RSMov_Position
	channel get_neighbours : Bool.core_nat
	
	-- local variable channels for defined operations that are required by the state machine
	
	-- declaring state machine events
	
	-- declaring call and ret events for undefined operations
	channel moveCall, moveRet: core_real.core_real
	
	EndExecs = {| endexec__, endexec
	 |}
	
	Transitions = {| internal__
	 |}
	

	-- Only the undefined operations are declared here.
	-- If the state machine is in isolation, all required operations will be undefined.
	-- If it is in the context of a controller, the required operations not provided by the
	-- controller will be declared here, and the defined operations will be defined in the
	-- context of the Controller module, and therefore within scope of the state machien module.
	CALL__move(id__,
			    l,
			    a) = registerWrite.o_move.l.a -> SKIP
	
	
	
	-- definition of functions used to expose flow channels
	ShowEvents(P,E) = P[[ entered.x____.y____ <- enteredV.y____ | entered.x____.y____ <- E]]
					   [[ enter.x____.y____ <- enterV.y____ | enter.x____.y____ <- E]]
					   [[ exit.x____.y____ <- exitV.y____ | exit.x____.y____ <- E]]
					   [[ exited.x____.y____ <- exitedV.y____ | exited.x____.y____ <- E ]]
						 
	ShowEnteredV(P) = P[[ entered.x____.y____ <- enteredV.y____ | x____ <- SIDS, y____ <- SIDS ]]
	ShowEnterV(P) = P[[ enter.x____.y____ <- enterV.y____ | x____ <- SIDS, y____ <- SIDS ]]
	ShowExitV(P) = P[[ exit.x____.y____ <- exitV.y____ | x____ <- SIDS, y____ <- SIDS ]]
	ShowExitedV(P) = P[[ exited.x____.y____ <- exitedV.y____ | x____ <- SIDS, y____ <- SIDS ]]
	ShowV(P) = P[[ entered.x____.y____ <- enteredV.y____ | x____ <- SIDS, y____ <- SIDS]]
				[[ enter.x____.y____ <- enterV.y____ | x____ <- SIDS, y____ <- SIDS ]]
				[[ exit.x____.y____ <- exitV.y____ | x____ <- SIDS, y____ <- SIDS]]
				[[ exited.x____.y____ <- exitedV.y____ | x____ <- SIDS, y____ <- SIDS ]]
	
	-- declaring identifiers of state and final states
	datatype SIDS = SID_Movement
	              | SID_Movement_MovementAndAvoidance
	              | SID_Movement_MovementAndAvoidance_SMove
	              | SID_Movement_MovementAndAvoidance_Avoid
	              | SID_Movement_MovementAndAvoidance_DMove
	              | SID_Movement_MovementAndAvoidance_Wait
	              | SID_Movement_Turning
	              | SID_Movement_Turning_SInit
	              | SID_Movement_Turning_Turn180
	              | SID_Movement_Turning_RandomTurn
	              | SID_Movement_Turning_f0
	              | SID_Movement_Turning_WaitTurn180
	              | SID_Movement_Turning_WaitRandomTurn
	              | SID_Movement_InfoNeighbours
	
	-- declaring identifiers of transitions
	datatype TIDS = NULLTRANSITION__
	              | TID_Movement_MovementAndAvoidance_t0
	              | TID_Movement_MovementAndAvoidance_t1
	              | TID_Movement_MovementAndAvoidance_t2
	              | TID_Movement_MovementAndAvoidance_t3
	              | TID_Movement_MovementAndAvoidance_t4
	              | TID_Movement_MovementAndAvoidance_t5
	              | TID_Movement_MovementAndAvoidance_t6
	              | TID_Movement_MovementAndAvoidance_t7
	              | TID_Movement_MovementAndAvoidance_t8
	              | TID_Movement_Turning_t0
	              | TID_Movement_Turning_t1
	              | TID_Movement_Turning_t2
	              | TID_Movement_Turning_t3
	              | TID_Movement_Turning_t9
	              | TID_Movement_Turning_t10
	              | TID_Movement_Turning_t12
	              | TID_Movement_Turning_t13
	              | TID_Movement_Turning_t15
	              | TID_Movement_Turning_t16
	              | TID_Movement_Turning_t4
	              | TID_Movement_Turning_t5
	              | TID_Movement_t0
	              | TID_Movement_t1
	              | TID_Movement_t2
	              | TID_Movement_t4
	              | TID_Movement_t3
	              | TID_Movement_t5
	
	-- declaring identifiers of transitions that can interupt a state (excludes transitions from junctions)
	
	ITIDS = {
		TID_Movement_MovementAndAvoidance_t1,	TID_Movement_MovementAndAvoidance_t4,	TID_Movement_MovementAndAvoidance_t5,	TID_Movement_MovementAndAvoidance_t6,	TID_Movement_Turning_t1,	TID_Movement_Turning_t9,	TID_Movement_Turning_t10,	TID_Movement_Turning_t12,	TID_Movement_Turning_t13,	TID_Movement_Turning_t15,	TID_Movement_Turning_t16,	TID_Movement_t1,	TID_Movement_t2,	TID_Movement_t5
	}
	
	int_int = {|
		internal__.TID_Movement_MovementAndAvoidance_t1,
		internal__.TID_Movement_MovementAndAvoidance_t4,
		internal__.TID_Movement_MovementAndAvoidance_t5,
		internal__.TID_Movement_MovementAndAvoidance_t6,
		internal__.TID_Movement_Turning_t1,
		internal__.TID_Movement_Turning_t9,
		internal__.TID_Movement_Turning_t10,
		internal__.TID_Movement_Turning_t12,
		internal__.TID_Movement_Turning_t13,
		internal__.TID_Movement_Turning_t15,
		internal__.TID_Movement_Turning_t16,
		internal__.TID_Movement_t1,
		internal__.TID_Movement_t2,
		internal__.TID_Movement_t5
	|}
		
	
	internal_events = {|enter,entered,exit,exited|}
	
	-- declaring all states
	CS_Movement_MovementAndAvoidance_sync = {|
		enter.y____.x____, 
		entered.y____.x____, 
		exit.y____.x____, 
		exited.y____.x____,
		enter.x____.y____, 
		entered.x____.y____, 
		exit.x____.y____, 
		exited.x____.y____ |
		x____ <- {SID_Movement_MovementAndAvoidance,SID_Movement_Turning,SID_Movement_InfoNeighbours},
		y____ <- {SID_Movement_MovementAndAvoidance}
	|}
	
	Movement_MovementAndAvoidance_int_int = {|
		internal__.TID_Movement_MovementAndAvoidance_t1,
		internal__.TID_Movement_MovementAndAvoidance_t4,
		internal__.TID_Movement_MovementAndAvoidance_t5,
		internal__.TID_Movement_MovementAndAvoidance_t6
	|}
		
	
	Movement_MovementAndAvoidance_int_triggers = {|
		internal__.TID_Movement_MovementAndAvoidance_t0,
		internal__.TID_Movement_MovementAndAvoidance_t1,
		internal__.TID_Movement_MovementAndAvoidance_t2,
		internal__.TID_Movement_MovementAndAvoidance_t3,
		internal__.TID_Movement_MovementAndAvoidance_t4,
		internal__.TID_Movement_MovementAndAvoidance_t5,
		internal__.TID_Movement_MovementAndAvoidance_t6,
		internal__.TID_Movement_MovementAndAvoidance_t7,
		internal__.TID_Movement_MovementAndAvoidance_t8
	|}
	
	State_Movement_MovementAndAvoidance_SMove_R(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = 
		State_Movement_MovementAndAvoidance_SMove(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
	 		[|diff(Movement_MovementAndAvoidance_int_int,Movement_MovementAndAvoidance_SMove_triggers)|]
	 	SKIP
	 		
	State_Movement_MovementAndAvoidance_Avoid_R(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = 
		State_Movement_MovementAndAvoidance_Avoid(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
	 		[|diff(Movement_MovementAndAvoidance_int_int,Movement_MovementAndAvoidance_Avoid_triggers)|]
	 	SKIP
	 		
	State_Movement_MovementAndAvoidance_DMove_R(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = 
		State_Movement_MovementAndAvoidance_DMove(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
	 		[|diff(Movement_MovementAndAvoidance_int_int,Movement_MovementAndAvoidance_DMove_triggers)|]
	 	SKIP
	 		
	State_Movement_MovementAndAvoidance_Wait_R(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = 
		State_Movement_MovementAndAvoidance_Wait(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
	 		[|diff(Movement_MovementAndAvoidance_int_int,Movement_MovementAndAvoidance_Wait_triggers)|]
	 	SKIP
	 		
	State_Movement_MovementAndAvoidance(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = (
		State_Movement_MovementAndAvoidance_aux(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
			[|
				union(
					diff(int_int, Movement_MovementAndAvoidance_int_triggers),
					{|enter.x____.y____,
					  entered.x____.y____,
					  exit.x____.y____,
					  exited.x____.y____ |
					  x____ <- diff(SIDS,{SID_Movement_MovementAndAvoidance_SMove,SID_Movement_MovementAndAvoidance_Avoid,SID_Movement_MovementAndAvoidance_DMove,SID_Movement_MovementAndAvoidance_Wait}),
					  y____ <- {SID_Movement_MovementAndAvoidance_SMove,SID_Movement_MovementAndAvoidance_Avoid,SID_Movement_MovementAndAvoidance_DMove,SID_Movement_MovementAndAvoidance_Wait}
				    |}
				)
			|]
		(
			State_Movement_MovementAndAvoidance_SMove_R(id__,
					    const_RSMov_Movement_MB,
					    const_RSMov_Movement_alpha)
				[|inter(CS_Movement_MovementAndAvoidance_SMove_sync,union(union(CS_Movement_MovementAndAvoidance_Avoid_sync,CS_Movement_MovementAndAvoidance_DMove_sync),CS_Movement_MovementAndAvoidance_Wait_sync))|]
			(
				State_Movement_MovementAndAvoidance_Avoid_R(id__,
						    const_RSMov_Movement_MB,
						    const_RSMov_Movement_alpha)
					[|inter(CS_Movement_MovementAndAvoidance_Avoid_sync,union(CS_Movement_MovementAndAvoidance_DMove_sync,CS_Movement_MovementAndAvoidance_Wait_sync))|]
				(
					State_Movement_MovementAndAvoidance_DMove_R(id__,
							    const_RSMov_Movement_MB,
							    const_RSMov_Movement_alpha)
						[|inter(CS_Movement_MovementAndAvoidance_DMove_sync,CS_Movement_MovementAndAvoidance_Wait_sync)|]
					State_Movement_MovementAndAvoidance_Wait_R(id__,
							    const_RSMov_Movement_MB,
							    const_RSMov_Movement_alpha)
				)
			)
		)
	)
	
	Movement_MovementAndAvoidance_triggers = {|
		internal__.TID_Movement_t2,
		internal__.TID_Movement_MovementAndAvoidance_t8,
		internal__.TID_Movement_t3,
		internal__.TID_Movement_MovementAndAvoidance_t4,
		internal__.TID_Movement_MovementAndAvoidance_t3,
		internal__.TID_Movement_MovementAndAvoidance_t2,
		internal__.TID_Movement_t5,
		internal__.TID_Movement_MovementAndAvoidance_t0,
		internal__.TID_Movement_MovementAndAvoidance_t1,
		internal__.TID_Movement_t4,
		internal__.TID_Movement_MovementAndAvoidance_t5,
		internal__.TID_Movement_t1,
		internal__.TID_Movement_MovementAndAvoidance_t7,
		internal__.TID_Movement_MovementAndAvoidance_t6
	|}
	
	State_Movement_MovementAndAvoidance_aux(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = let
		T_Movement_t1(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = internal__!TID_Movement_t1 ->  exit.SID_Movement_MovementAndAvoidance.SID_Movement_MovementAndAvoidance -> SKIP;
							exit!SID_Movement_MovementAndAvoidance?z____:{SID_Movement_MovementAndAvoidance_SMove,SID_Movement_MovementAndAvoidance_Avoid,SID_Movement_MovementAndAvoidance_DMove,SID_Movement_MovementAndAvoidance_Wait} -> exited!SID_Movement_MovementAndAvoidance!z____ -> 
									SKIP;
							SKIP;exited.SID_Movement_MovementAndAvoidance.SID_Movement_MovementAndAvoidance -> SKIP;
							DoClockReset({clockReset.CLID_MBC});enter!SID_Movement_MovementAndAvoidance!SID_Movement_InfoNeighbours -> entered!SID_Movement_MovementAndAvoidance!SID_Movement_InfoNeighbours ->
							State_Movement_MovementAndAvoidance_aux(id__,
									    const_RSMov_Movement_MB,
									    const_RSMov_Movement_alpha)
		State_Movement_MovementAndAvoidance_aux_execute(id__,o____) = SKIP; 
		I_Movement_MovementAndAvoidance_i0(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha);
			entered!o____!SID_Movement_MovementAndAvoidance ->
			(SKIP; STOP /\ (
				T_Movement_t1(id__,
						    const_RSMov_Movement_MB,
						    const_RSMov_Movement_alpha)
				[]
				internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Movement_t2,TID_Movement_MovementAndAvoidance_t8,TID_Movement_t3,TID_Movement_MovementAndAvoidance_t4,TID_Movement_MovementAndAvoidance_t3,TID_Movement_MovementAndAvoidance_t2,TID_Movement_t5,TID_Movement_MovementAndAvoidance_t0,TID_Movement_MovementAndAvoidance_t1,TID_Movement_t4,TID_Movement_MovementAndAvoidance_t5,TID_Movement_t1,TID_Movement_MovementAndAvoidance_t7,TID_Movement_MovementAndAvoidance_t6}) -> exit?y____:diff(SIDS,{SID_Movement_MovementAndAvoidance})!SID_Movement_MovementAndAvoidance -> (
						exit!SID_Movement_MovementAndAvoidance?z____:{SID_Movement_MovementAndAvoidance_SMove,SID_Movement_MovementAndAvoidance_Avoid,SID_Movement_MovementAndAvoidance_DMove,SID_Movement_MovementAndAvoidance_Wait} -> exited!SID_Movement_MovementAndAvoidance!z____ -> 
								SKIP;
						SKIP;
						exited!y____!SID_Movement_MovementAndAvoidance -> SKIP);
						State_Movement_MovementAndAvoidance_aux(id__,
								    const_RSMov_Movement_MB,
								    const_RSMov_Movement_alpha)
			))
	within
		enter?x____:diff(SIDS,{SID_Movement_MovementAndAvoidance})!SID_Movement_MovementAndAvoidance -> (State_Movement_MovementAndAvoidance_aux_execute(id__,x____))
	
	CS_Movement_MovementAndAvoidance_SMove_sync = {|
		enter.y____.x____, 
		entered.y____.x____, 
		exit.y____.x____, 
		exited.y____.x____,
		enter.x____.y____, 
		entered.x____.y____, 
		exit.x____.y____, 
		exited.x____.y____ |
		x____ <- {SID_Movement_MovementAndAvoidance_SMove,SID_Movement_MovementAndAvoidance_Avoid,SID_Movement_MovementAndAvoidance_DMove,SID_Movement_MovementAndAvoidance_Wait},
		y____ <- {SID_Movement_MovementAndAvoidance_SMove}
	|}
	
	
	Movement_MovementAndAvoidance_SMove_triggers = {|
		internal__.TID_Movement_MovementAndAvoidance_t7,
		internal__.TID_Movement_MovementAndAvoidance_t8,
		internal__.TID_Movement_MovementAndAvoidance_t4,
		internal__.TID_Movement_MovementAndAvoidance_t3,
		internal__.TID_Movement_MovementAndAvoidance_t2,
		internal__.TID_Movement_MovementAndAvoidance_t1,
		internal__.TID_Movement_MovementAndAvoidance_t5,
		internal__.TID_Movement_MovementAndAvoidance_t6
	|}
	
	State_Movement_MovementAndAvoidance_SMove(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = let
		T_Movement_MovementAndAvoidance_t1(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = internal__!TID_Movement_MovementAndAvoidance_t1 ->  exit.SID_Movement_MovementAndAvoidance_SMove.SID_Movement_MovementAndAvoidance_SMove -> SKIP;
							SKIP;exited.SID_Movement_MovementAndAvoidance_SMove.SID_Movement_MovementAndAvoidance_SMove -> SKIP;
							enter!SID_Movement_MovementAndAvoidance_SMove!SID_Movement_MovementAndAvoidance_DMove -> entered!SID_Movement_MovementAndAvoidance_SMove!SID_Movement_MovementAndAvoidance_DMove ->
							State_Movement_MovementAndAvoidance_SMove(id__,
									    const_RSMov_Movement_MB,
									    const_RSMov_Movement_alpha)
		State_Movement_MovementAndAvoidance_SMove_execute(id__,o____) = true&CALL__move(
					id__,
					1,
					0
				); 
			entered!o____!SID_Movement_MovementAndAvoidance_SMove ->
			(SKIP; STOP /\ (
				T_Movement_MovementAndAvoidance_t1(id__,
						    const_RSMov_Movement_MB,
						    const_RSMov_Movement_alpha)
				[]
				internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Movement_MovementAndAvoidance_t7,TID_Movement_MovementAndAvoidance_t8,TID_Movement_MovementAndAvoidance_t4,TID_Movement_MovementAndAvoidance_t3,TID_Movement_MovementAndAvoidance_t2,TID_Movement_MovementAndAvoidance_t1,TID_Movement_MovementAndAvoidance_t5,TID_Movement_MovementAndAvoidance_t6}) -> exit?y____:diff(SIDS,{SID_Movement_MovementAndAvoidance_SMove})!SID_Movement_MovementAndAvoidance_SMove -> (
						SKIP;
						exited!y____!SID_Movement_MovementAndAvoidance_SMove -> SKIP);
						State_Movement_MovementAndAvoidance_SMove(id__,
								    const_RSMov_Movement_MB,
								    const_RSMov_Movement_alpha)
			))
	within
		enter?x____:diff(SIDS,{SID_Movement_MovementAndAvoidance_SMove})!SID_Movement_MovementAndAvoidance_SMove -> (State_Movement_MovementAndAvoidance_SMove_execute(id__,x____))
	
	CS_Movement_MovementAndAvoidance_Avoid_sync = {|
		enter.y____.x____, 
		entered.y____.x____, 
		exit.y____.x____, 
		exited.y____.x____,
		enter.x____.y____, 
		entered.x____.y____, 
		exit.x____.y____, 
		exited.x____.y____ |
		x____ <- {SID_Movement_MovementAndAvoidance_SMove,SID_Movement_MovementAndAvoidance_Avoid,SID_Movement_MovementAndAvoidance_DMove,SID_Movement_MovementAndAvoidance_Wait},
		y____ <- {SID_Movement_MovementAndAvoidance_Avoid}
	|}
	
	
	Movement_MovementAndAvoidance_Avoid_triggers = {|
		internal__.TID_Movement_MovementAndAvoidance_t7,
		internal__.TID_Movement_MovementAndAvoidance_t8,
		internal__.TID_Movement_MovementAndAvoidance_t4,
		internal__.TID_Movement_MovementAndAvoidance_t3,
		internal__.TID_Movement_MovementAndAvoidance_t2,
		internal__.TID_Movement_MovementAndAvoidance_t1,
		internal__.TID_Movement_MovementAndAvoidance_t5,
		internal__.TID_Movement_MovementAndAvoidance_t6
	|}
	
	State_Movement_MovementAndAvoidance_Avoid(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = let
		T_Movement_MovementAndAvoidance_t5(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = internal__!TID_Movement_MovementAndAvoidance_t5 ->  exit.SID_Movement_MovementAndAvoidance_Avoid.SID_Movement_MovementAndAvoidance_Avoid -> SKIP;
							SKIP;exited.SID_Movement_MovementAndAvoidance_Avoid.SID_Movement_MovementAndAvoidance_Avoid -> SKIP;
							enter!SID_Movement_MovementAndAvoidance_Avoid!SID_Movement_MovementAndAvoidance_Wait -> entered!SID_Movement_MovementAndAvoidance_Avoid!SID_Movement_MovementAndAvoidance_Wait ->
							State_Movement_MovementAndAvoidance_Avoid(id__,
									    const_RSMov_Movement_MB,
									    const_RSMov_Movement_alpha)
		State_Movement_MovementAndAvoidance_Avoid_execute(id__,o____) = get_p?p -> true&(if ((p==RSMov_Position_left)) then (true&CALL__move(
					id__,
					1,
					0
				)) else (true&CALL__move(
					id__,
					1,
					0
				))); 
			entered!o____!SID_Movement_MovementAndAvoidance_Avoid ->
			(SKIP; STOP /\ (
				T_Movement_MovementAndAvoidance_t5(id__,
						    const_RSMov_Movement_MB,
						    const_RSMov_Movement_alpha)
				[]
				internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Movement_MovementAndAvoidance_t7,TID_Movement_MovementAndAvoidance_t8,TID_Movement_MovementAndAvoidance_t4,TID_Movement_MovementAndAvoidance_t3,TID_Movement_MovementAndAvoidance_t2,TID_Movement_MovementAndAvoidance_t1,TID_Movement_MovementAndAvoidance_t5,TID_Movement_MovementAndAvoidance_t6}) -> exit?y____:diff(SIDS,{SID_Movement_MovementAndAvoidance_Avoid})!SID_Movement_MovementAndAvoidance_Avoid -> (
						SKIP;
						exited!y____!SID_Movement_MovementAndAvoidance_Avoid -> SKIP);
						State_Movement_MovementAndAvoidance_Avoid(id__,
								    const_RSMov_Movement_MB,
								    const_RSMov_Movement_alpha)
			))
	within
		enter?x____:diff(SIDS,{SID_Movement_MovementAndAvoidance_Avoid})!SID_Movement_MovementAndAvoidance_Avoid -> (State_Movement_MovementAndAvoidance_Avoid_execute(id__,x____))
	
	CS_Movement_MovementAndAvoidance_DMove_sync = {|
		enter.y____.x____, 
		entered.y____.x____, 
		exit.y____.x____, 
		exited.y____.x____,
		enter.x____.y____, 
		entered.x____.y____, 
		exit.x____.y____, 
		exited.x____.y____ |
		x____ <- {SID_Movement_MovementAndAvoidance_SMove,SID_Movement_MovementAndAvoidance_Avoid,SID_Movement_MovementAndAvoidance_DMove,SID_Movement_MovementAndAvoidance_Wait},
		y____ <- {SID_Movement_MovementAndAvoidance_DMove}
	|}
	
	
	Movement_MovementAndAvoidance_DMove_triggers = {|
		internal__.TID_Movement_MovementAndAvoidance_t7,
		internal__.TID_Movement_MovementAndAvoidance_t8,
		internal__.TID_Movement_MovementAndAvoidance_t4,
		internal__.TID_Movement_MovementAndAvoidance_t3,
		internal__.TID_Movement_MovementAndAvoidance_t2,
		internal__.TID_Movement_MovementAndAvoidance_t1,
		internal__.TID_Movement_MovementAndAvoidance_t5,
		internal__.TID_Movement_MovementAndAvoidance_t6
	|}
	
	State_Movement_MovementAndAvoidance_DMove(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = let
		T_Movement_MovementAndAvoidance_t4(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = endexec__.TID_Movement_MovementAndAvoidance_t4 -> startexec ->  (exit.SID_Movement_MovementAndAvoidance_DMove.SID_Movement_MovementAndAvoidance_DMove -> SKIP;
							SKIP;exited.SID_Movement_MovementAndAvoidance_DMove.SID_Movement_MovementAndAvoidance_DMove -> SKIP;
							J_Movement_MovementAndAvoidance_j0(id__,
									    const_RSMov_Movement_MB,
									    const_RSMov_Movement_alpha))
		J_Movement_MovementAndAvoidance_j0(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = (
					(internal__!TID_Movement_MovementAndAvoidance_t2 -> enter!SID_Movement_MovementAndAvoidance_DMove!SID_Movement_MovementAndAvoidance_DMove -> State_Movement_MovementAndAvoidance_DMove_execute(id__,SID_Movement_MovementAndAvoidance_DMove)
					)[]
					(internal__!TID_Movement_MovementAndAvoidance_t3 -> get_obstacle?b__?x__ -> set_p!x__ -> SKIP
					;enter!SID_Movement_MovementAndAvoidance_DMove!SID_Movement_MovementAndAvoidance_Avoid -> entered!SID_Movement_MovementAndAvoidance_DMove!SID_Movement_MovementAndAvoidance_Avoid ->
					State_Movement_MovementAndAvoidance_DMove(id__,
							    const_RSMov_Movement_MB,
							    const_RSMov_Movement_alpha)
					)
					)
		State_Movement_MovementAndAvoidance_DMove_execute(id__,o____) = SKIP; 
			entered!o____!SID_Movement_MovementAndAvoidance_DMove ->
			(SKIP; STOP /\ (
				T_Movement_MovementAndAvoidance_t4(id__,
						    const_RSMov_Movement_MB,
						    const_RSMov_Movement_alpha)
				[]
				internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Movement_MovementAndAvoidance_t7,TID_Movement_MovementAndAvoidance_t8,TID_Movement_MovementAndAvoidance_t4,TID_Movement_MovementAndAvoidance_t3,TID_Movement_MovementAndAvoidance_t2,TID_Movement_MovementAndAvoidance_t1,TID_Movement_MovementAndAvoidance_t5,TID_Movement_MovementAndAvoidance_t6}) -> exit?y____:diff(SIDS,{SID_Movement_MovementAndAvoidance_DMove})!SID_Movement_MovementAndAvoidance_DMove -> (
						SKIP;
						exited!y____!SID_Movement_MovementAndAvoidance_DMove -> SKIP);
						State_Movement_MovementAndAvoidance_DMove(id__,
								    const_RSMov_Movement_MB,
								    const_RSMov_Movement_alpha)
			))
	within
		enter?x____:diff(SIDS,{SID_Movement_MovementAndAvoidance_DMove})!SID_Movement_MovementAndAvoidance_DMove -> (State_Movement_MovementAndAvoidance_DMove_execute(id__,x____))
	
	CS_Movement_MovementAndAvoidance_Wait_sync = {|
		enter.y____.x____, 
		entered.y____.x____, 
		exit.y____.x____, 
		exited.y____.x____,
		enter.x____.y____, 
		entered.x____.y____, 
		exit.x____.y____, 
		exited.x____.y____ |
		x____ <- {SID_Movement_MovementAndAvoidance_SMove,SID_Movement_MovementAndAvoidance_Avoid,SID_Movement_MovementAndAvoidance_DMove,SID_Movement_MovementAndAvoidance_Wait},
		y____ <- {SID_Movement_MovementAndAvoidance_Wait}
	|}
	
	
	Movement_MovementAndAvoidance_Wait_triggers = {|
		internal__.TID_Movement_MovementAndAvoidance_t7,
		internal__.TID_Movement_MovementAndAvoidance_t8,
		internal__.TID_Movement_MovementAndAvoidance_t4,
		internal__.TID_Movement_MovementAndAvoidance_t3,
		internal__.TID_Movement_MovementAndAvoidance_t2,
		internal__.TID_Movement_MovementAndAvoidance_t1,
		internal__.TID_Movement_MovementAndAvoidance_t6,
		internal__.TID_Movement_MovementAndAvoidance_t5
	|}
	
	State_Movement_MovementAndAvoidance_Wait(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = let
		T_Movement_MovementAndAvoidance_t6(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = endexec__.TID_Movement_MovementAndAvoidance_t6 -> startexec ->  (exit.SID_Movement_MovementAndAvoidance_Wait.SID_Movement_MovementAndAvoidance_Wait -> SKIP;
							SKIP;exited.SID_Movement_MovementAndAvoidance_Wait.SID_Movement_MovementAndAvoidance_Wait -> SKIP;
							J_Movement_MovementAndAvoidance_j1(id__,
									    const_RSMov_Movement_MB,
									    const_RSMov_Movement_alpha))
		J_Movement_MovementAndAvoidance_j1(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = (
					(internal__!TID_Movement_MovementAndAvoidance_t7 -> enter!SID_Movement_MovementAndAvoidance_Wait!SID_Movement_MovementAndAvoidance_Wait -> State_Movement_MovementAndAvoidance_Wait_execute(id__,SID_Movement_MovementAndAvoidance_Wait)
					)[]
					(internal__!TID_Movement_MovementAndAvoidance_t8 -> enter!SID_Movement_MovementAndAvoidance_Wait!SID_Movement_MovementAndAvoidance_SMove -> entered!SID_Movement_MovementAndAvoidance_Wait!SID_Movement_MovementAndAvoidance_SMove ->
					State_Movement_MovementAndAvoidance_Wait(id__,
							    const_RSMov_Movement_MB,
							    const_RSMov_Movement_alpha)
					)
					)
		State_Movement_MovementAndAvoidance_Wait_execute(id__,o____) = SKIP; 
			entered!o____!SID_Movement_MovementAndAvoidance_Wait ->
			(SKIP; STOP /\ (
				T_Movement_MovementAndAvoidance_t6(id__,
						    const_RSMov_Movement_MB,
						    const_RSMov_Movement_alpha)
				[]
				internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Movement_MovementAndAvoidance_t7,TID_Movement_MovementAndAvoidance_t8,TID_Movement_MovementAndAvoidance_t4,TID_Movement_MovementAndAvoidance_t3,TID_Movement_MovementAndAvoidance_t2,TID_Movement_MovementAndAvoidance_t1,TID_Movement_MovementAndAvoidance_t6,TID_Movement_MovementAndAvoidance_t5}) -> exit?y____:diff(SIDS,{SID_Movement_MovementAndAvoidance_Wait})!SID_Movement_MovementAndAvoidance_Wait -> (
						SKIP;
						exited!y____!SID_Movement_MovementAndAvoidance_Wait -> SKIP);
						State_Movement_MovementAndAvoidance_Wait(id__,
								    const_RSMov_Movement_MB,
								    const_RSMov_Movement_alpha)
			))
	within
		enter?x____:diff(SIDS,{SID_Movement_MovementAndAvoidance_Wait})!SID_Movement_MovementAndAvoidance_Wait -> (State_Movement_MovementAndAvoidance_Wait_execute(id__,x____))
	
	CS_Movement_Turning_sync = {|
		enter.y____.x____, 
		entered.y____.x____, 
		exit.y____.x____, 
		exited.y____.x____,
		enter.x____.y____, 
		entered.x____.y____, 
		exit.x____.y____, 
		exited.x____.y____ |
		x____ <- {SID_Movement_MovementAndAvoidance,SID_Movement_Turning,SID_Movement_InfoNeighbours},
		y____ <- {SID_Movement_Turning}
	|}
	
	Movement_Turning_int_int = {|
		internal__.TID_Movement_Turning_t1,
		internal__.TID_Movement_Turning_t9,
		internal__.TID_Movement_Turning_t10,
		internal__.TID_Movement_Turning_t12,
		internal__.TID_Movement_Turning_t13,
		internal__.TID_Movement_Turning_t15,
		internal__.TID_Movement_Turning_t16
	|}
		
	
	Movement_Turning_int_triggers = {|
		internal__.TID_Movement_Turning_t0,
		internal__.TID_Movement_Turning_t1,
		internal__.TID_Movement_Turning_t2,
		internal__.TID_Movement_Turning_t3,
		internal__.TID_Movement_Turning_t9,
		internal__.TID_Movement_Turning_t10,
		internal__.TID_Movement_Turning_t12,
		internal__.TID_Movement_Turning_t13,
		internal__.TID_Movement_Turning_t15,
		internal__.TID_Movement_Turning_t16,
		internal__.TID_Movement_Turning_t4,
		internal__.TID_Movement_Turning_t5
	|}
	
	State_Movement_Turning_SInit_R(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = 
		State_Movement_Turning_SInit(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
	 		[|diff(Movement_Turning_int_int,Movement_Turning_SInit_triggers)|]
	 	SKIP
	 		
	State_Movement_Turning_Turn180_R(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = 
		State_Movement_Turning_Turn180(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
	 		[|diff(Movement_Turning_int_int,Movement_Turning_Turn180_triggers)|]
	 	SKIP
	 		
	State_Movement_Turning_RandomTurn_R(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = 
		State_Movement_Turning_RandomTurn(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
	 		[|diff(Movement_Turning_int_int,Movement_Turning_RandomTurn_triggers)|]
	 	SKIP
	 		
	State_Movement_Turning_f0_R(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = 
		State_Movement_Turning_f0(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
	 		[|diff(Movement_Turning_int_int,Movement_Turning_f0_triggers)|]
	 	SKIP
	 		
	State_Movement_Turning_WaitTurn180_R(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = 
		State_Movement_Turning_WaitTurn180(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
	 		[|diff(Movement_Turning_int_int,Movement_Turning_WaitTurn180_triggers)|]
	 	SKIP
	 		
	State_Movement_Turning_WaitRandomTurn_R(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = 
		State_Movement_Turning_WaitRandomTurn(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
	 		[|diff(Movement_Turning_int_int,Movement_Turning_WaitRandomTurn_triggers)|]
	 	SKIP
	 		
	State_Movement_Turning(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = (
		State_Movement_Turning_aux(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
			[|
				union(
					diff(int_int, Movement_Turning_int_triggers),
					{|enter.x____.y____,
					  entered.x____.y____,
					  exit.x____.y____,
					  exited.x____.y____ |
					  x____ <- diff(SIDS,{SID_Movement_Turning_SInit,SID_Movement_Turning_Turn180,SID_Movement_Turning_RandomTurn,SID_Movement_Turning_f0,SID_Movement_Turning_WaitTurn180,SID_Movement_Turning_WaitRandomTurn}),
					  y____ <- {SID_Movement_Turning_SInit,SID_Movement_Turning_Turn180,SID_Movement_Turning_RandomTurn,SID_Movement_Turning_f0,SID_Movement_Turning_WaitTurn180,SID_Movement_Turning_WaitRandomTurn}
				    |}
				)
			|]
		(
			State_Movement_Turning_SInit_R(id__,
					    const_RSMov_Movement_MB,
					    const_RSMov_Movement_alpha)
				[|inter(CS_Movement_Turning_SInit_sync,union(union(union(union(CS_Movement_Turning_Turn180_sync,CS_Movement_Turning_RandomTurn_sync),CS_Movement_Turning_f0_sync),CS_Movement_Turning_WaitTurn180_sync),CS_Movement_Turning_WaitRandomTurn_sync))|]
			(
				State_Movement_Turning_Turn180_R(id__,
						    const_RSMov_Movement_MB,
						    const_RSMov_Movement_alpha)
					[|inter(CS_Movement_Turning_Turn180_sync,union(union(union(CS_Movement_Turning_RandomTurn_sync,CS_Movement_Turning_f0_sync),CS_Movement_Turning_WaitTurn180_sync),CS_Movement_Turning_WaitRandomTurn_sync))|]
				(
					State_Movement_Turning_RandomTurn_R(id__,
							    const_RSMov_Movement_MB,
							    const_RSMov_Movement_alpha)
						[|inter(CS_Movement_Turning_RandomTurn_sync,union(union(CS_Movement_Turning_f0_sync,CS_Movement_Turning_WaitTurn180_sync),CS_Movement_Turning_WaitRandomTurn_sync))|]
					(
						State_Movement_Turning_f0_R(id__,
								    const_RSMov_Movement_MB,
								    const_RSMov_Movement_alpha)
							[|inter(CS_Movement_Turning_f0_sync,union(CS_Movement_Turning_WaitTurn180_sync,CS_Movement_Turning_WaitRandomTurn_sync))|]
						(
							State_Movement_Turning_WaitTurn180_R(id__,
									    const_RSMov_Movement_MB,
									    const_RSMov_Movement_alpha)
								[|inter(CS_Movement_Turning_WaitTurn180_sync,CS_Movement_Turning_WaitRandomTurn_sync)|]
							State_Movement_Turning_WaitRandomTurn_R(id__,
									    const_RSMov_Movement_MB,
									    const_RSMov_Movement_alpha)
						)
					)
				)
			)
		)
	)
	
	Movement_Turning_triggers = {|
		internal__.TID_Movement_t2,
		internal__.TID_Movement_Turning_t16,
		internal__.TID_Movement_Turning_t10,
		internal__.TID_Movement_Turning_t12,
		internal__.TID_Movement_t3,
		internal__.TID_Movement_Turning_t0,
		internal__.TID_Movement_t5,
		internal__.TID_Movement_Turning_t15,
		internal__.TID_Movement_Turning_t9,
		internal__.TID_Movement_t4,
		internal__.TID_Movement_Turning_t13,
		internal__.TID_Movement_t1,
		internal__.TID_Movement_Turning_t1,
		internal__.TID_Movement_Turning_t4,
		internal__.TID_Movement_Turning_t3,
		internal__.TID_Movement_Turning_t2,
		internal__.TID_Movement_Turning_t5
	|}
	
	State_Movement_Turning_aux(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = let
		T_Movement_t2(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = internal__!TID_Movement_t2 ->  exit.SID_Movement_Turning.SID_Movement_Turning -> SKIP;
							exit!SID_Movement_Turning?z____:{SID_Movement_Turning_SInit,SID_Movement_Turning_Turn180,SID_Movement_Turning_RandomTurn,SID_Movement_Turning_f0,SID_Movement_Turning_WaitTurn180,SID_Movement_Turning_WaitRandomTurn} -> exited!SID_Movement_Turning!z____ -> 
									SKIP;
							SKIP;exited.SID_Movement_Turning.SID_Movement_Turning -> SKIP;
							enter!SID_Movement_Turning!SID_Movement_MovementAndAvoidance -> entered!SID_Movement_Turning!SID_Movement_MovementAndAvoidance ->
							State_Movement_Turning_aux(id__,
									    const_RSMov_Movement_MB,
									    const_RSMov_Movement_alpha)
		State_Movement_Turning_aux_execute(id__,o____) = true & (set_turned!false -> SKIP); 
		I_Movement_Turning_i0(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha);
			entered!o____!SID_Movement_Turning ->
			(SKIP; STOP /\ (
				T_Movement_t2(id__,
						    const_RSMov_Movement_MB,
						    const_RSMov_Movement_alpha)
				[]
				internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Movement_t2,TID_Movement_Turning_t16,TID_Movement_Turning_t10,TID_Movement_Turning_t12,TID_Movement_t3,TID_Movement_Turning_t0,TID_Movement_t5,TID_Movement_Turning_t15,TID_Movement_Turning_t9,TID_Movement_t4,TID_Movement_Turning_t13,TID_Movement_t1,TID_Movement_Turning_t1,TID_Movement_Turning_t4,TID_Movement_Turning_t3,TID_Movement_Turning_t2,TID_Movement_Turning_t5}) -> exit?y____:diff(SIDS,{SID_Movement_Turning})!SID_Movement_Turning -> (
						exit!SID_Movement_Turning?z____:{SID_Movement_Turning_SInit,SID_Movement_Turning_Turn180,SID_Movement_Turning_RandomTurn,SID_Movement_Turning_f0,SID_Movement_Turning_WaitTurn180,SID_Movement_Turning_WaitRandomTurn} -> exited!SID_Movement_Turning!z____ -> 
								SKIP;
						SKIP;
						exited!y____!SID_Movement_Turning -> SKIP);
						State_Movement_Turning_aux(id__,
								    const_RSMov_Movement_MB,
								    const_RSMov_Movement_alpha)
			))
	within
		enter?x____:diff(SIDS,{SID_Movement_Turning})!SID_Movement_Turning -> (State_Movement_Turning_aux_execute(id__,x____))
	
	CS_Movement_Turning_SInit_sync = {|
		enter.y____.x____, 
		entered.y____.x____, 
		exit.y____.x____, 
		exited.y____.x____,
		enter.x____.y____, 
		entered.x____.y____, 
		exit.x____.y____, 
		exited.x____.y____ |
		x____ <- {SID_Movement_Turning_SInit,SID_Movement_Turning_Turn180,SID_Movement_Turning_RandomTurn,SID_Movement_Turning_f0,SID_Movement_Turning_WaitTurn180,SID_Movement_Turning_WaitRandomTurn},
		y____ <- {SID_Movement_Turning_SInit}
	|}
	
	
	Movement_Turning_SInit_triggers = {|
		internal__.TID_Movement_Turning_t13,
		internal__.TID_Movement_Turning_t16,
		internal__.TID_Movement_Turning_t1,
		internal__.TID_Movement_Turning_t12,
		internal__.TID_Movement_Turning_t10,
		internal__.TID_Movement_Turning_t4,
		internal__.TID_Movement_Turning_t3,
		internal__.TID_Movement_Turning_t15,
		internal__.TID_Movement_Turning_t2,
		internal__.TID_Movement_Turning_t9,
		internal__.TID_Movement_Turning_t5
	|}
	
	State_Movement_Turning_SInit(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = let
		T_Movement_Turning_t1(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = internal__!TID_Movement_Turning_t1 ->  exit.SID_Movement_Turning_SInit.SID_Movement_Turning_SInit -> SKIP;
							SKIP;exited.SID_Movement_Turning_SInit.SID_Movement_Turning_SInit -> SKIP;
							J_Movement_Turning_j0(id__,
									    const_RSMov_Movement_MB,
									    const_RSMov_Movement_alpha)
		J_Movement_Turning_j0(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = (
					(internal__!TID_Movement_Turning_t2 -> enter!SID_Movement_Turning_SInit!SID_Movement_Turning_Turn180 -> entered!SID_Movement_Turning_SInit!SID_Movement_Turning_Turn180 ->
					State_Movement_Turning_SInit(id__,
							    const_RSMov_Movement_MB,
							    const_RSMov_Movement_alpha)
					)[]
					(internal__!TID_Movement_Turning_t3 -> enter!SID_Movement_Turning_SInit!SID_Movement_Turning_RandomTurn -> entered!SID_Movement_Turning_SInit!SID_Movement_Turning_RandomTurn ->
					State_Movement_Turning_SInit(id__,
							    const_RSMov_Movement_MB,
							    const_RSMov_Movement_alpha)
					)
					)
		State_Movement_Turning_SInit_execute(id__,o____) = SKIP; 
			entered!o____!SID_Movement_Turning_SInit ->
			(SKIP; STOP /\ (
				T_Movement_Turning_t1(id__,
						    const_RSMov_Movement_MB,
						    const_RSMov_Movement_alpha)
				[]
				internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Movement_Turning_t13,TID_Movement_Turning_t16,TID_Movement_Turning_t1,TID_Movement_Turning_t12,TID_Movement_Turning_t10,TID_Movement_Turning_t4,TID_Movement_Turning_t3,TID_Movement_Turning_t15,TID_Movement_Turning_t2,TID_Movement_Turning_t9,TID_Movement_Turning_t5}) -> exit?y____:diff(SIDS,{SID_Movement_Turning_SInit})!SID_Movement_Turning_SInit -> (
						SKIP;
						exited!y____!SID_Movement_Turning_SInit -> SKIP);
						State_Movement_Turning_SInit(id__,
								    const_RSMov_Movement_MB,
								    const_RSMov_Movement_alpha)
			))
	within
		enter?x____:diff(SIDS,{SID_Movement_Turning_SInit})!SID_Movement_Turning_SInit -> (State_Movement_Turning_SInit_execute(id__,x____))
	
	CS_Movement_Turning_Turn180_sync = {|
		enter.y____.x____, 
		entered.y____.x____, 
		exit.y____.x____, 
		exited.y____.x____,
		enter.x____.y____, 
		entered.x____.y____, 
		exit.x____.y____, 
		exited.x____.y____ |
		x____ <- {SID_Movement_Turning_SInit,SID_Movement_Turning_Turn180,SID_Movement_Turning_RandomTurn,SID_Movement_Turning_f0,SID_Movement_Turning_WaitTurn180,SID_Movement_Turning_WaitRandomTurn},
		y____ <- {SID_Movement_Turning_Turn180}
	|}
	
	
	Movement_Turning_Turn180_triggers = {|
		internal__.TID_Movement_Turning_t13,
		internal__.TID_Movement_Turning_t12,
		internal__.TID_Movement_Turning_t4,
		internal__.TID_Movement_Turning_t9
	|}
	
	State_Movement_Turning_Turn180(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = let
		T_Movement_Turning_t9(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = internal__!TID_Movement_Turning_t9 ->  exit.SID_Movement_Turning_Turn180.SID_Movement_Turning_Turn180 -> SKIP;
							SKIP;exited.SID_Movement_Turning_Turn180.SID_Movement_Turning_Turn180 -> SKIP;
							J_Movement_Turning_j1(id__,
									    const_RSMov_Movement_MB,
									    const_RSMov_Movement_alpha)
		J_Movement_Turning_j1(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = (
					(internal__!TID_Movement_Turning_t4 -> endexec -> startexec -> SKIP;enter!SID_Movement_Turning_Turn180!SID_Movement_Turning_WaitTurn180 -> entered!SID_Movement_Turning_Turn180!SID_Movement_Turning_WaitTurn180 ->
					State_Movement_Turning_Turn180(id__,
							    const_RSMov_Movement_MB,
							    const_RSMov_Movement_alpha)
					)
					)
		State_Movement_Turning_Turn180_execute(id__,o____) = true&CALL__move(
					id__,
					0,
					1
				); 
			entered!o____!SID_Movement_Turning_Turn180 ->
			(SKIP; STOP /\ (
				T_Movement_Turning_t9(id__,
						    const_RSMov_Movement_MB,
						    const_RSMov_Movement_alpha)
				[]
				internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Movement_Turning_t13,TID_Movement_Turning_t12,TID_Movement_Turning_t4,TID_Movement_Turning_t9}) -> exit?y____:diff(SIDS,{SID_Movement_Turning_Turn180})!SID_Movement_Turning_Turn180 -> (
						SKIP;
						exited!y____!SID_Movement_Turning_Turn180 -> SKIP);
						State_Movement_Turning_Turn180(id__,
								    const_RSMov_Movement_MB,
								    const_RSMov_Movement_alpha)
			))
	within
		enter?x____:diff(SIDS,{SID_Movement_Turning_Turn180})!SID_Movement_Turning_Turn180 -> (State_Movement_Turning_Turn180_execute(id__,x____))
	
	CS_Movement_Turning_RandomTurn_sync = {|
		enter.y____.x____, 
		entered.y____.x____, 
		exit.y____.x____, 
		exited.y____.x____,
		enter.x____.y____, 
		entered.x____.y____, 
		exit.x____.y____, 
		exited.x____.y____ |
		x____ <- {SID_Movement_Turning_SInit,SID_Movement_Turning_Turn180,SID_Movement_Turning_RandomTurn,SID_Movement_Turning_f0,SID_Movement_Turning_WaitTurn180,SID_Movement_Turning_WaitRandomTurn},
		y____ <- {SID_Movement_Turning_RandomTurn}
	|}
	
	
	Movement_Turning_RandomTurn_triggers = {|
		internal__.TID_Movement_Turning_t16,
		internal__.TID_Movement_Turning_t10,
		internal__.TID_Movement_Turning_t15,
		internal__.TID_Movement_Turning_t5
	|}
	
	State_Movement_Turning_RandomTurn(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = let
		T_Movement_Turning_t10(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = internal__!TID_Movement_Turning_t10 ->  exit.SID_Movement_Turning_RandomTurn.SID_Movement_Turning_RandomTurn -> SKIP;
							SKIP;exited.SID_Movement_Turning_RandomTurn.SID_Movement_Turning_RandomTurn -> SKIP;
							J_Movement_Turning_j2(id__,
									    const_RSMov_Movement_MB,
									    const_RSMov_Movement_alpha)
		J_Movement_Turning_j2(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = (
					(internal__!TID_Movement_Turning_t5 -> endexec -> startexec -> SKIP;enter!SID_Movement_Turning_RandomTurn!SID_Movement_Turning_WaitRandomTurn -> entered!SID_Movement_Turning_RandomTurn!SID_Movement_Turning_WaitRandomTurn ->
					State_Movement_Turning_RandomTurn(id__,
							    const_RSMov_Movement_MB,
							    const_RSMov_Movement_alpha)
					)
					)
		State_Movement_Turning_RandomTurn_execute(id__,o____) = true&CALL__move(
					id__,
					0,
					1
				); 
			entered!o____!SID_Movement_Turning_RandomTurn ->
			(SKIP; STOP /\ (
				T_Movement_Turning_t10(id__,
						    const_RSMov_Movement_MB,
						    const_RSMov_Movement_alpha)
				[]
				internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Movement_Turning_t16,TID_Movement_Turning_t10,TID_Movement_Turning_t15,TID_Movement_Turning_t5}) -> exit?y____:diff(SIDS,{SID_Movement_Turning_RandomTurn})!SID_Movement_Turning_RandomTurn -> (
						SKIP;
						exited!y____!SID_Movement_Turning_RandomTurn -> SKIP);
						State_Movement_Turning_RandomTurn(id__,
								    const_RSMov_Movement_MB,
								    const_RSMov_Movement_alpha)
			))
	within
		enter?x____:diff(SIDS,{SID_Movement_Turning_RandomTurn})!SID_Movement_Turning_RandomTurn -> (State_Movement_Turning_RandomTurn_execute(id__,x____))
	
	CS_Movement_Turning_f0_sync = {|
		enter.y____.x____, 
		entered.y____.x____, 
		exit.y____.x____, 
		exited.y____.x____,
		enter.x____.y____, 
		entered.x____.y____, 
		exit.x____.y____, 
		exited.x____.y____ |
		x____ <- {SID_Movement_Turning_SInit,SID_Movement_Turning_Turn180,SID_Movement_Turning_RandomTurn,SID_Movement_Turning_f0,SID_Movement_Turning_WaitTurn180,SID_Movement_Turning_WaitRandomTurn},
		y____ <- {SID_Movement_Turning_f0}
	|}
	
	
	Movement_Turning_f0_triggers = {|
	|}
	
	State_Movement_Turning_f0(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = let
		State_Movement_Turning_f0_execute(id__,o____) = SKIP; 
			entered!o____!SID_Movement_Turning_f0 ->
			(SKIP; STOP /\ (
				internal__?x____:diff(ITIDS,{NULLTRANSITION__}) -> exit?y____:diff(SIDS,{SID_Movement_Turning_f0})!SID_Movement_Turning_f0 -> (
						SKIP;
						exited!y____!SID_Movement_Turning_f0 -> SKIP);
						State_Movement_Turning_f0(id__,
								    const_RSMov_Movement_MB,
								    const_RSMov_Movement_alpha)
			))
	within
		enter?x____:diff(SIDS,{SID_Movement_Turning_f0})!SID_Movement_Turning_f0 -> (State_Movement_Turning_f0_execute(id__,x____))
	
	CS_Movement_Turning_WaitTurn180_sync = {|
		enter.y____.x____, 
		entered.y____.x____, 
		exit.y____.x____, 
		exited.y____.x____,
		enter.x____.y____, 
		entered.x____.y____, 
		exit.x____.y____, 
		exited.x____.y____ |
		x____ <- {SID_Movement_Turning_SInit,SID_Movement_Turning_Turn180,SID_Movement_Turning_RandomTurn,SID_Movement_Turning_f0,SID_Movement_Turning_WaitTurn180,SID_Movement_Turning_WaitRandomTurn},
		y____ <- {SID_Movement_Turning_WaitTurn180}
	|}
	
	
	Movement_Turning_WaitTurn180_triggers = {|
		internal__.TID_Movement_Turning_t13,
		internal__.TID_Movement_Turning_t12,
		internal__.TID_Movement_Turning_t4
	|}
	
	State_Movement_Turning_WaitTurn180(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = let
		T_Movement_Turning_t12(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = internal__!TID_Movement_Turning_t12 ->  exit.SID_Movement_Turning_WaitTurn180.SID_Movement_Turning_WaitTurn180 -> SKIP;
							SKIP;exited.SID_Movement_Turning_WaitTurn180.SID_Movement_Turning_WaitTurn180 -> SKIP;
							true & (set_turned!true -> SKIP);enter!SID_Movement_Turning_WaitTurn180!SID_Movement_Turning_f0 -> entered!SID_Movement_Turning_WaitTurn180!SID_Movement_Turning_f0 ->
							State_Movement_Turning_WaitTurn180(id__,
									    const_RSMov_Movement_MB,
									    const_RSMov_Movement_alpha)
		T_Movement_Turning_t13(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = internal__!TID_Movement_Turning_t13 ->  exit.SID_Movement_Turning_WaitTurn180.SID_Movement_Turning_WaitTurn180 -> SKIP;
							SKIP;exited.SID_Movement_Turning_WaitTurn180.SID_Movement_Turning_WaitTurn180 -> SKIP;
							J_Movement_Turning_j1(id__,
									    const_RSMov_Movement_MB,
									    const_RSMov_Movement_alpha)
		J_Movement_Turning_j1(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = (
					(internal__!TID_Movement_Turning_t4 -> endexec -> startexec -> SKIP;enter!SID_Movement_Turning_WaitTurn180!SID_Movement_Turning_WaitTurn180 -> State_Movement_Turning_WaitTurn180_execute(id__,SID_Movement_Turning_WaitTurn180)
					)
					)
		State_Movement_Turning_WaitTurn180_execute(id__,o____) = SKIP; 
			entered!o____!SID_Movement_Turning_WaitTurn180 ->
			(SKIP; STOP /\ (
				T_Movement_Turning_t12(id__,
						    const_RSMov_Movement_MB,
						    const_RSMov_Movement_alpha)[]
				T_Movement_Turning_t13(id__,
						    const_RSMov_Movement_MB,
						    const_RSMov_Movement_alpha)
				[]
				internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Movement_Turning_t13,TID_Movement_Turning_t12,TID_Movement_Turning_t4}) -> exit?y____:diff(SIDS,{SID_Movement_Turning_WaitTurn180})!SID_Movement_Turning_WaitTurn180 -> (
						SKIP;
						exited!y____!SID_Movement_Turning_WaitTurn180 -> SKIP);
						State_Movement_Turning_WaitTurn180(id__,
								    const_RSMov_Movement_MB,
								    const_RSMov_Movement_alpha)
			))
	within
		enter?x____:diff(SIDS,{SID_Movement_Turning_WaitTurn180})!SID_Movement_Turning_WaitTurn180 -> (State_Movement_Turning_WaitTurn180_execute(id__,x____))
	
	CS_Movement_Turning_WaitRandomTurn_sync = {|
		enter.y____.x____, 
		entered.y____.x____, 
		exit.y____.x____, 
		exited.y____.x____,
		enter.x____.y____, 
		entered.x____.y____, 
		exit.x____.y____, 
		exited.x____.y____ |
		x____ <- {SID_Movement_Turning_SInit,SID_Movement_Turning_Turn180,SID_Movement_Turning_RandomTurn,SID_Movement_Turning_f0,SID_Movement_Turning_WaitTurn180,SID_Movement_Turning_WaitRandomTurn},
		y____ <- {SID_Movement_Turning_WaitRandomTurn}
	|}
	
	
	Movement_Turning_WaitRandomTurn_triggers = {|
		internal__.TID_Movement_Turning_t16,
		internal__.TID_Movement_Turning_t15,
		internal__.TID_Movement_Turning_t5
	|}
	
	State_Movement_Turning_WaitRandomTurn(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = let
		T_Movement_Turning_t15(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = internal__!TID_Movement_Turning_t15 ->  exit.SID_Movement_Turning_WaitRandomTurn.SID_Movement_Turning_WaitRandomTurn -> SKIP;
							SKIP;exited.SID_Movement_Turning_WaitRandomTurn.SID_Movement_Turning_WaitRandomTurn -> SKIP;
							J_Movement_Turning_j2(id__,
									    const_RSMov_Movement_MB,
									    const_RSMov_Movement_alpha)
		T_Movement_Turning_t16(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = internal__!TID_Movement_Turning_t16 ->  exit.SID_Movement_Turning_WaitRandomTurn.SID_Movement_Turning_WaitRandomTurn -> SKIP;
							SKIP;exited.SID_Movement_Turning_WaitRandomTurn.SID_Movement_Turning_WaitRandomTurn -> SKIP;
							true & (set_turned!true -> SKIP);enter!SID_Movement_Turning_WaitRandomTurn!SID_Movement_Turning_f0 -> entered!SID_Movement_Turning_WaitRandomTurn!SID_Movement_Turning_f0 ->
							State_Movement_Turning_WaitRandomTurn(id__,
									    const_RSMov_Movement_MB,
									    const_RSMov_Movement_alpha)
		J_Movement_Turning_j2(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = (
					(internal__!TID_Movement_Turning_t5 -> endexec -> startexec -> SKIP;enter!SID_Movement_Turning_WaitRandomTurn!SID_Movement_Turning_WaitRandomTurn -> State_Movement_Turning_WaitRandomTurn_execute(id__,SID_Movement_Turning_WaitRandomTurn)
					)
					)
		State_Movement_Turning_WaitRandomTurn_execute(id__,o____) = SKIP; 
			entered!o____!SID_Movement_Turning_WaitRandomTurn ->
			(SKIP; STOP /\ (
				T_Movement_Turning_t15(id__,
						    const_RSMov_Movement_MB,
						    const_RSMov_Movement_alpha)[]
				T_Movement_Turning_t16(id__,
						    const_RSMov_Movement_MB,
						    const_RSMov_Movement_alpha)
				[]
				internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Movement_Turning_t16,TID_Movement_Turning_t15,TID_Movement_Turning_t5}) -> exit?y____:diff(SIDS,{SID_Movement_Turning_WaitRandomTurn})!SID_Movement_Turning_WaitRandomTurn -> (
						SKIP;
						exited!y____!SID_Movement_Turning_WaitRandomTurn -> SKIP);
						State_Movement_Turning_WaitRandomTurn(id__,
								    const_RSMov_Movement_MB,
								    const_RSMov_Movement_alpha)
			))
	within
		enter?x____:diff(SIDS,{SID_Movement_Turning_WaitRandomTurn})!SID_Movement_Turning_WaitRandomTurn -> (State_Movement_Turning_WaitRandomTurn_execute(id__,x____))
	
	CS_Movement_InfoNeighbours_sync = {|
		enter.y____.x____, 
		entered.y____.x____, 
		exit.y____.x____, 
		exited.y____.x____,
		enter.x____.y____, 
		entered.x____.y____, 
		exit.x____.y____, 
		exited.x____.y____ |
		x____ <- {SID_Movement_MovementAndAvoidance,SID_Movement_Turning,SID_Movement_InfoNeighbours},
		y____ <- {SID_Movement_InfoNeighbours}
	|}
	
	
	Movement_InfoNeighbours_triggers = {|
		internal__.TID_Movement_t2,
		internal__.TID_Movement_t1,
		internal__.TID_Movement_t3,
		internal__.TID_Movement_t5,
		internal__.TID_Movement_t4
	|}
	
	State_Movement_InfoNeighbours(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = let
		T_Movement_t5(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = endexec__.TID_Movement_t5 -> startexec ->  (exit.SID_Movement_InfoNeighbours.SID_Movement_InfoNeighbours -> SKIP;
							SKIP;exited.SID_Movement_InfoNeighbours.SID_Movement_InfoNeighbours -> SKIP;
							J_Movement_j0(id__,
									    const_RSMov_Movement_MB,
									    const_RSMov_Movement_alpha))
		J_Movement_j0(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = (
					(internal__!TID_Movement_t4 -> get_neighbours?b__?x__ -> set_n!x__ -> SKIP
					;enter!SID_Movement_InfoNeighbours!SID_Movement_Turning -> entered!SID_Movement_InfoNeighbours!SID_Movement_Turning ->
					State_Movement_InfoNeighbours(id__,
							    const_RSMov_Movement_MB,
							    const_RSMov_Movement_alpha)
					)[]
					(internal__!TID_Movement_t3 -> enter!SID_Movement_InfoNeighbours!SID_Movement_InfoNeighbours -> State_Movement_InfoNeighbours_execute(id__,SID_Movement_InfoNeighbours)
					)
					)
		State_Movement_InfoNeighbours_execute(id__,o____) = SKIP; 
			entered!o____!SID_Movement_InfoNeighbours ->
			(SKIP; STOP /\ (
				T_Movement_t5(id__,
						    const_RSMov_Movement_MB,
						    const_RSMov_Movement_alpha)
				[]
				internal__?x____:diff(ITIDS,{NULLTRANSITION__,TID_Movement_t2,TID_Movement_t1,TID_Movement_t3,TID_Movement_t5,TID_Movement_t4}) -> exit?y____:diff(SIDS,{SID_Movement_InfoNeighbours})!SID_Movement_InfoNeighbours -> (
						SKIP;
						exited!y____!SID_Movement_InfoNeighbours -> SKIP);
						State_Movement_InfoNeighbours(id__,
								    const_RSMov_Movement_MB,
								    const_RSMov_Movement_alpha)
			))
	within
		enter?x____:diff(SIDS,{SID_Movement_InfoNeighbours})!SID_Movement_InfoNeighbours -> (State_Movement_InfoNeighbours_execute(id__,x____))
	
	
	I_Movement_MovementAndAvoidance_i0(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = let
		T_Movement_MovementAndAvoidance_t0(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = internal__!TID_Movement_MovementAndAvoidance_t0 -> DoClockReset({clockReset.CLID_MBC});enter!SID_Movement_MovementAndAvoidance!SID_Movement_MovementAndAvoidance_SMove -> entered!SID_Movement_MovementAndAvoidance!SID_Movement_MovementAndAvoidance_SMove ->
		SKIP
	within
		T_Movement_MovementAndAvoidance_t0(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
	
	I_Movement_i0(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = let
		T_Movement_t0(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = internal__!TID_Movement_t0 -> enter!SID_Movement!SID_Movement_MovementAndAvoidance -> entered!SID_Movement!SID_Movement_MovementAndAvoidance ->
		SKIP
	within
		T_Movement_t0(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
	
	I_Movement_Turning_i0(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = let
		T_Movement_Turning_t0(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = internal__!TID_Movement_Turning_t0 -> enter!SID_Movement_Turning!SID_Movement_Turning_SInit -> entered!SID_Movement_Turning!SID_Movement_Turning_SInit ->
		SKIP
	within
		T_Movement_Turning_t0(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
	
	
	State_Movement_MovementAndAvoidance_R(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = 
		State_Movement_MovementAndAvoidance(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
			[|diff(int_int,Movement_MovementAndAvoidance_triggers)|]
		SKIP
			 		
	State_Movement_Turning_R(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = 
		State_Movement_Turning(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
			[|diff(int_int,Movement_Turning_triggers)|]
		SKIP
			 		
	State_Movement_InfoNeighbours_R(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = 
		State_Movement_InfoNeighbours(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
			[|diff(int_int,Movement_InfoNeighbours_triggers)|]
		SKIP
			 		
		
	STM(id__,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) = 
		let
			Ending = endexec -> (startexec -> Ending [] terminate -> SKIP)
		within
			startexec -> 
				(
					(
						(
						I_Movement_i0(id__,
								    const_RSMov_Movement_MB,
								    const_RSMov_Movement_alpha)
							[|
								{|enter.x____.y____, entered.x____.y____, exit.x____.y____, exited.x____.y____ |
									x____ <- diff(SIDS,{SID_Movement_MovementAndAvoidance,SID_Movement_Turning,SID_Movement_InfoNeighbours}),
									y____ <- {SID_Movement_MovementAndAvoidance,SID_Movement_Turning,SID_Movement_InfoNeighbours}
							|}|]
						(
							State_Movement_MovementAndAvoidance_R(id__,
									    const_RSMov_Movement_MB,
									    const_RSMov_Movement_alpha)
								[|inter(CS_Movement_MovementAndAvoidance_sync,union(CS_Movement_Turning_sync,CS_Movement_InfoNeighbours_sync))|]
							(
								State_Movement_Turning_R(id__,
										    const_RSMov_Movement_MB,
										    const_RSMov_Movement_alpha)
									[|inter(CS_Movement_Turning_sync,CS_Movement_InfoNeighbours_sync)|]
								State_Movement_InfoNeighbours_R(id__,
										    const_RSMov_Movement_MB,
										    const_RSMov_Movement_alpha)
							)
						)
						) [|{|terminate|}|> SKIP
					) \ {|terminate|}
				) ; Ending
	
	-- optimized memory process
	channel getV_n: core_nat
	channel getV_p: RSMov_Position
	channel getV_turned: core_boolean
	channel getV_obstacle: Bool.RSMov_Position
	channel getV_neighbours: Bool.core_nat
	
	-- individual memory processes
	
		Memory_n(x__) = ( 
			get_n!x__ -> Memory_n(x__)
			[]
			getV_n!x__ -> Memory_n(x__)
			[]
			set_n?x__ -> Memory_n(x__)
		)
	
		Memory_p(x__) = ( 
			get_p!x__ -> Memory_p(x__)
			[]
			getV_p!x__ -> Memory_p(x__)
			[]
			set_p?x__ -> Memory_p(x__)
		)
	
		Memory_turned(x__) = ( 
			get_turned!x__ -> Memory_turned(x__)
			[]
			getV_turned!x__ -> Memory_turned(x__)
			[]
			set_turned?x__ -> Memory_turned(x__)
		)
	
	Memory_WC_TID_Movement_MovementAndAvoidance_t7_0(x__) = (
		getWC.WC_TID_Movement_MovementAndAvoidance_t7_0_ID!x__ -> Memory_WC_TID_Movement_MovementAndAvoidance_t7_0(x__)
		[]
		setWC.WC_TID_Movement_MovementAndAvoidance_t7_0_ID?x__ -> Memory_WC_TID_Movement_MovementAndAvoidance_t7_0(x__)
	)
	
	Memory_WC_TID_Movement_t1_0(x__) = (
		getWC.WC_TID_Movement_t1_0_ID!x__ -> Memory_WC_TID_Movement_t1_0(x__)
		[]
		setWC.WC_TID_Movement_t1_0_ID?x__ -> Memory_WC_TID_Movement_t1_0(x__)
	)
	
	Memory_WC_TID_Movement_MovementAndAvoidance_t2_0(x__) = (
		getWC.WC_TID_Movement_MovementAndAvoidance_t2_0_ID!x__ -> Memory_WC_TID_Movement_MovementAndAvoidance_t2_0(x__)
		[]
		setWC.WC_TID_Movement_MovementAndAvoidance_t2_0_ID?x__ -> Memory_WC_TID_Movement_MovementAndAvoidance_t2_0(x__)
	)
	
	Memory_WC_TID_Movement_MovementAndAvoidance_t8_0(x__) = (
		getWC.WC_TID_Movement_MovementAndAvoidance_t8_0_ID!x__ -> Memory_WC_TID_Movement_MovementAndAvoidance_t8_0(x__)
		[]
		setWC.WC_TID_Movement_MovementAndAvoidance_t8_0_ID?x__ -> Memory_WC_TID_Movement_MovementAndAvoidance_t8_0(x__)
	)
	
		Memory_obstacle(x__) = (
			get_obstacle!x__ -> Memory_obstacle(x__)
			[]
			getV_obstacle!x__ -> Memory_obstacle(x__)
			[]
			registerRead.i_obstacle?x__ -> Memory_obstacle(x__)
		)
	
		Memory_neighbours(x__) = (
			get_neighbours!x__ -> Memory_neighbours(x__)
			[]
			getV_neighbours!x__ -> Memory_neighbours(x__)
			[]
			registerRead.i_neighbours?x__ -> Memory_neighbours(x__)
		)
	
	-- processes that read variables and offer transitions
			
	MemoryTransitions(id__,
		 n,
		 p,
		 turned,
		 WC_TID_Movement_MovementAndAvoidance_t7_0,
		 WC_TID_Movement_t1_0,
		 WC_TID_Movement_MovementAndAvoidance_t2_0,
		 WC_TID_Movement_MovementAndAvoidance_t8_0,
		 const_RSMov_Movement_MB,
		 const_RSMov_Movement_alpha,
		 obstacle,
		 neighbours) = (
		startexec -> SKIP
	
		[]	internal__!TID_Movement_MovementAndAvoidance_t0 -> SKIP
		[]
		internal__!TID_Movement_MovementAndAvoidance_t1 -> SKIP
		[]
		((not (((member(obstacle,{true.x__ | x__ <- RSMov_Position}) and (WC_TID_Movement_MovementAndAvoidance_t2_0))))))&(internal__!TID_Movement_MovementAndAvoidance_t2 -> SKIP)
		[]
		((member(obstacle,{true.p | p <- RSMov_Position}) and WC_TID_Movement_MovementAndAvoidance_t2_0))&(internal__!TID_Movement_MovementAndAvoidance_t3 -> SKIP)
		[]
		endexec__!TID_Movement_MovementAndAvoidance_t4 -> SKIP
		[]
		internal__!TID_Movement_MovementAndAvoidance_t5 -> SKIP
		[]
		endexec__!TID_Movement_MovementAndAvoidance_t6 -> SKIP
		[]
		(WC_TID_Movement_MovementAndAvoidance_t7_0)&(internal__!TID_Movement_MovementAndAvoidance_t7 -> SKIP)
		[]
		(WC_TID_Movement_MovementAndAvoidance_t8_0)&(internal__!TID_Movement_MovementAndAvoidance_t8 -> SKIP)
		[]
		internal__!TID_Movement_Turning_t0 -> SKIP
		[]
		internal__!TID_Movement_Turning_t1 -> SKIP
		[]
		((n>const_RSMov_Movement_alpha))&(internal__!TID_Movement_Turning_t2 -> SKIP)
		[]
		((n<=const_RSMov_Movement_alpha))&(internal__!TID_Movement_Turning_t3 -> SKIP)
		[]
		internal__!TID_Movement_Turning_t9 -> SKIP
		[]
		internal__!TID_Movement_Turning_t10 -> SKIP
		[]
		(WC_TID_Movement_MovementAndAvoidance_t8_0)&(internal__!TID_Movement_Turning_t12 -> SKIP)
		[]
		(WC_TID_Movement_MovementAndAvoidance_t7_0)&(internal__!TID_Movement_Turning_t13 -> SKIP)
		[]
		(WC_TID_Movement_MovementAndAvoidance_t7_0)&(internal__!TID_Movement_Turning_t15 -> SKIP)
		[]
		(WC_TID_Movement_MovementAndAvoidance_t8_0)&(internal__!TID_Movement_Turning_t16 -> SKIP)
		[]
		internal__!TID_Movement_Turning_t4 -> SKIP
		[]
		internal__!TID_Movement_Turning_t5 -> SKIP
		[]
		internal__!TID_Movement_t0 -> SKIP
		[]
		(WC_TID_Movement_t1_0)&(internal__!TID_Movement_t1 -> SKIP)
		[]
		(turned)&(internal__!TID_Movement_t2 -> SKIP)
		[]
		(member(neighbours,{true.n | n <- core_nat}))&(internal__!TID_Movement_t4 -> SKIP)
		[]
		((not (member(neighbours,{true.x__ | x__ <- core_nat}))))&(internal__!TID_Movement_t3 -> SKIP)
		[]
		endexec__!TID_Movement_t5 -> SKIP
	
	 	[]
	 	 	set_n?x__ -> SKIP
	 	[]
	 	set_p?x__ -> SKIP
	 	[]
	 	set_turned?x__ -> SKIP
	
	 	[]
	 	 	setWC.WC_TID_Movement_MovementAndAvoidance_t7_0_ID?x__ -> SKIP
	 	[]
	 	setWC.WC_TID_Movement_t1_0_ID?x__ -> SKIP
	 	[]
	 	setWC.WC_TID_Movement_MovementAndAvoidance_t2_0_ID?x__ -> SKIP
	 	[]
	 	setWC.WC_TID_Movement_MovementAndAvoidance_t8_0_ID?x__ -> SKIP
	 			 			 	
	 	)
	MemoryTransitions_Movement(id__,
		 const_RSMov_Movement_MB,
		 const_RSMov_Movement_alpha) =
		(
		getV_n?n ->	
		getV_p?p ->	
		getV_turned?turned ->	
		getWC.WC_TID_Movement_MovementAndAvoidance_t7_0_ID?WC_TID_Movement_MovementAndAvoidance_t7_0 ->	
		getWC.WC_TID_Movement_t1_0_ID?WC_TID_Movement_t1_0 ->	
		getWC.WC_TID_Movement_MovementAndAvoidance_t2_0_ID?WC_TID_Movement_MovementAndAvoidance_t2_0 ->	
		getWC.WC_TID_Movement_MovementAndAvoidance_t8_0_ID?WC_TID_Movement_MovementAndAvoidance_t8_0 ->	
		getV_obstacle?obstacle ->	
		getV_neighbours?neighbours ->
		 MemoryTransitions(id__,
		 	 n,
		 	 p,
		 	 turned,
		 	 WC_TID_Movement_MovementAndAvoidance_t7_0,
		 	 WC_TID_Movement_t1_0,
		 	 WC_TID_Movement_MovementAndAvoidance_t2_0,
		 	 WC_TID_Movement_MovementAndAvoidance_t8_0,
		 	 const_RSMov_Movement_MB,
		 	 const_RSMov_Movement_alpha,
		 	 obstacle,
		 	 neighbours);
		 MemoryTransitions_Movement(id__,
		 	 const_RSMov_Movement_MB,
		 	 const_RSMov_Movement_alpha)
		)
	
	-- synchronisation, hiding and process sets 
	MemoryVariablesProcesses_Movement = Union(
		{
			{
				Memory_n(0),
				Memory_p(RSMov_Position_left),
				Memory_turned(true),
				Memory_WC_TID_Movement_MovementAndAvoidance_t7_0(false),
				Memory_WC_TID_Movement_t1_0(false),
				Memory_WC_TID_Movement_MovementAndAvoidance_t2_0(false),
				Memory_WC_TID_Movement_MovementAndAvoidance_t8_0(false),
				Memory_obstacle(false.RSMov_Position_left),
				Memory_neighbours(false.0)
			}
		}
	)
	
	MemoryVariablesSyncSet = Union({
		{|
			getV_neighbours,
			getV_n,
			getWC.WC_TID_Movement_MovementAndAvoidance_t2_0_ID,
			setWC,
			setWC.WC_TID_Movement_MovementAndAvoidance_t2_0_ID,
			getWC.WC_TID_Movement_MovementAndAvoidance_t7_0_ID,
			getWC.WC_TID_Movement_MovementAndAvoidance_t8_0_ID,
			setWC.WC_TID_Movement_MovementAndAvoidance_t8_0_ID,
			getWC.WC_TID_Movement_t1_0_ID,
			set_n,
			getV_turned,
			set_p,
			set_turned,
			setWC.WC_TID_Movement_MovementAndAvoidance_t7_0_ID,
			getV_p,
			setWC.WC_TID_Movement_t1_0_ID,
			getV_obstacle
		|}	
	})
	
	MemoryVariablesHideSet = Union({
		{|
			getV_neighbours,
			getV_turned,
			getV_n,
			getV_p,
			getWC,
			getV_obstacle
		|}
	})
	
	-- combined individual memory processes
	MemoryVariables = ||| P : MemoryVariablesProcesses_Movement @ P
	
	-- complete memory process
	MemoryN(id__,
		 const_RSMov_Movement_MB,
		 const_RSMov_Movement_alpha) = 
		(MemoryVariables 
		 [| MemoryVariablesSyncSet |] 
		 (	startexec -> wbisim(MemoryTransitions_Movement(id__,
		 	 const_RSMov_Movement_MB,
		 	 const_RSMov_Movement_alpha))
		 	[| union({|startexec|},union(Transitions,diff(EndExecs,{endexec}))) |]
		 	-- The following process is an equivalent way to specify that between endexec
		 	-- and startexec no events in the set Transitions are available, thus preventing
		 	-- the state machine from performing transitions in between. Note that there is
		 	-- no synchronisation on the single 'endexec' event itself, because this only
		 	-- arises from an action, and the memory does not interfere with events in
		 	-- actions.
		 	(let
		 		TransitionController = startexec -> (RUN(Transitions) 
		 											 /\ ([] e : EndExecs @ e -> TransitionController))
		 	within 
		 		TransitionController)
		 	
		 	-- It isn't part of MemoryTransitions_ itself, because such a process would need
		 	-- to permit updates to setWC events, emanating from processes controlling clocks.
		 	-- Currently the MemoryTransitions_ process of a software operation called 
		 	-- within this state machine is copied into this process. So to incorporate the
		 	-- control below in such a process would require either:
		 	--
		 	-- (1) knowing about the clocks of every state machine that could call it, which
		 	-- 	   is not compositional;
		 	-- (2) not copying the process, but generating the transition choices explicitly.
		 	--
		 )
		) \ MemoryVariablesHideSet
	
	-- optimised memory
	-- Sets of named elements identified according to transition conditions:
	-- {}
	-- {turned}
	-- {WC_TID_Movement_MovementAndAvoidance_t8_0}
	-- {n,alpha}
	-- {neighbours}
	-- {WC_TID_Movement_t1_0}
	-- {WC_TID_Movement_MovementAndAvoidance_t2_0,obstacle}
	-- {WC_TID_Movement_MovementAndAvoidance_t7_0}
	-- Summary of all identified named elements:
	-- {
	-- WC_TID_Movement_MovementAndAvoidance_t2_0
	-- turned
	-- WC_TID_Movement_MovementAndAvoidance_t8_0
	-- n
	-- neighbours
	-- WC_TID_Movement_t1_0
	-- alpha
	-- p
	-- WC_TID_Movement_MovementAndAvoidance_t7_0
	-- obstacle
	-- }
	
	-- Allocation plan:
	-- 0:{}
	--	=> {
	--		TID_Movement_Turning_t5,
	--		TID_Movement_MovementAndAvoidance_t6,
	--		TID_Movement_Turning_t0,
	--		TID_Movement_MovementAndAvoidance_t1,
	--		TID_Movement_Turning_t1,
	--		TID_Movement_Turning_t4,
	--		TID_Movement_t0,
	--		TID_Movement_MovementAndAvoidance_t0,
	--		TID_Movement_Turning_t9,
	--		TID_Movement_MovementAndAvoidance_t4,
	--		TID_Movement_MovementAndAvoidance_t5,
	--		TID_Movement_t5,
	--		TID_Movement_Turning_t10}
	-- 1:{turned}
	--	=> {
	--		TID_Movement_t2}
	-- 2:{WC_TID_Movement_MovementAndAvoidance_t8_0}
	--	=> {
	--		TID_Movement_MovementAndAvoidance_t8,
	--		TID_Movement_Turning_t16,
	--		TID_Movement_Turning_t12}
	-- 6:{n,alpha}
	--	=> {
	--		TID_Movement_Turning_t3,
	--		TID_Movement_Turning_t2}
	-- 3:{neighbours}
	--	=> {
	--		TID_Movement_t3,
	--		TID_Movement_t4}
	-- 4:{WC_TID_Movement_t1_0}
	--	=> {
	--		TID_Movement_t1}
	-- 7:{WC_TID_Movement_MovementAndAvoidance_t2_0,obstacle}
	--	=> {
	--		TID_Movement_MovementAndAvoidance_t2,
	--		TID_Movement_MovementAndAvoidance_t3}
	-- 5:{WC_TID_Movement_MovementAndAvoidance_t7_0}
	--	=> {
	--		TID_Movement_Turning_t15,
	--		TID_Movement_MovementAndAvoidance_t7,
	--		TID_Movement_Turning_t13}
	
	-- Memory transition processes
	MemoryTransitions_opt_0(id__) =
	(
		let
			Update = Current(id__)
			Current(id__)
			 	   = 
			 	   internal__!TID_Movement_Turning_t5 -> Update
			 	   []
			 	   endexec__!TID_Movement_MovementAndAvoidance_t6 -> Update
			 	   []
			 	   internal__!TID_Movement_Turning_t0 -> Update
			 	   []
			 	   internal__!TID_Movement_MovementAndAvoidance_t1 -> Update
			 	   []
			 	   internal__!TID_Movement_Turning_t1 -> Update
			 	   []
			 	   internal__!TID_Movement_Turning_t4 -> Update
			 	   []
			 	   internal__!TID_Movement_t0 -> Update
			 	   []
			 	   internal__!TID_Movement_MovementAndAvoidance_t0 -> Update
			 	   []
			 	   internal__!TID_Movement_Turning_t9 -> Update
			 	   []
			 	   endexec__!TID_Movement_MovementAndAvoidance_t4 -> Update
			 	   []
			 	   internal__!TID_Movement_MovementAndAvoidance_t5 -> Update
			 	   []
			 	   endexec__!TID_Movement_t5 -> Update
			 	   []
			 	   internal__!TID_Movement_Turning_t10 -> Update
			 	   	 []
			 	   	 startexec -> Update
		within
			Update
	)
	MemoryTransitions_opt_1(id__) =
	(
		let
			Update = 
			get_turned?turned ->
			Current(id__,
				 turned)
			Current(id__,
				 turned)
			 	   = 
			 	   (turned)&(internal__!TID_Movement_t2 -> Update)
			 	   	 []
			 	   	 startexec -> Update
			 	   	 
			 	   	 []
			 	   	 set_turned?x__ -> Update
		within
			Update
	)
	MemoryTransitions_opt_2(id__) =
	(
		let
			Update = 
			getWC.WC_TID_Movement_MovementAndAvoidance_t8_0_ID?WC_TID_Movement_MovementAndAvoidance_t8_0 ->
			Current(id__,
				 WC_TID_Movement_MovementAndAvoidance_t8_0)
			Current(id__,
				 WC_TID_Movement_MovementAndAvoidance_t8_0)
			 	   = 
			 	   (WC_TID_Movement_MovementAndAvoidance_t8_0)&(internal__!TID_Movement_MovementAndAvoidance_t8 -> Update)
			 	   []
			 	   (WC_TID_Movement_MovementAndAvoidance_t8_0)&(internal__!TID_Movement_Turning_t16 -> Update)
			 	   []
			 	   (WC_TID_Movement_MovementAndAvoidance_t8_0)&(internal__!TID_Movement_Turning_t12 -> Update)
			 	   	 []
			 	   	 startexec -> Update
			 	   	 
			 	   	 []
			 	   	 setWC.WC_TID_Movement_MovementAndAvoidance_t8_0_ID?x__ -> Update
		within
			Update
	)
	MemoryTransitions_opt_6(id__,
		 const_RSMov_Movement_alpha) =
	(
		let
			Update = 
			get_n?n ->
			Current(id__,
				 n)
			Current(id__,
				 n)
			 	   = 
			 	   ((n<=const_RSMov_Movement_alpha))&(internal__!TID_Movement_Turning_t3 -> Update)
			 	   []
			 	   ((n>const_RSMov_Movement_alpha))&(internal__!TID_Movement_Turning_t2 -> Update)
			 	   	 []
			 	   	 startexec -> Update
			 	   	 
			 	   	 []
			 	   	 set_n?x__ -> Update
		within
			Update
	)
	MemoryTransitions_opt_3(id__) =
	(
		let
			Update = 
			get_neighbours?neighbours ->
			Current(id__,
				 neighbours)
			Current(id__,
				 neighbours)
			 	   = 
			 	   ((not (member(neighbours,{true.x__ | x__ <- core_nat}))))&(internal__!TID_Movement_t3 -> Update)
			 	   []
			 	   (member(neighbours,{true.n | n <- core_nat}))&(internal__!TID_Movement_t4 -> Update)
			 	   	 []
			 	   	 startexec -> Update
		within
			Update
	)
	MemoryTransitions_opt_4(id__) =
	(
		let
			Update = 
			getWC.WC_TID_Movement_t1_0_ID?WC_TID_Movement_t1_0 ->
			Current(id__,
				 WC_TID_Movement_t1_0)
			Current(id__,
				 WC_TID_Movement_t1_0)
			 	   = 
			 	   (WC_TID_Movement_t1_0)&(internal__!TID_Movement_t1 -> Update)
			 	   	 []
			 	   	 startexec -> Update
			 	   	 
			 	   	 []
			 	   	 setWC.WC_TID_Movement_t1_0_ID?x__ -> Update
		within
			Update
	)
	MemoryTransitions_opt_7(id__) =
	(
		let
			Update = 
			getWC.WC_TID_Movement_MovementAndAvoidance_t2_0_ID?WC_TID_Movement_MovementAndAvoidance_t2_0 ->
			get_obstacle?obstacle ->
			Current(id__,
				 WC_TID_Movement_MovementAndAvoidance_t2_0,
				 obstacle)
			Current(id__,
				 WC_TID_Movement_MovementAndAvoidance_t2_0,
				 obstacle)
			 	   = 
			 	   ((not (((member(obstacle,{true.x__ | x__ <- RSMov_Position}) and (WC_TID_Movement_MovementAndAvoidance_t2_0))))))&(internal__!TID_Movement_MovementAndAvoidance_t2 -> Update)
			 	   []
			 	   ((member(obstacle,{true.p | p <- RSMov_Position}) and WC_TID_Movement_MovementAndAvoidance_t2_0))&(internal__!TID_Movement_MovementAndAvoidance_t3 -> Update)
			 	   	 []
			 	   	 startexec -> Update
			 	   	 
			 	   	 []
			 	   	 setWC.WC_TID_Movement_MovementAndAvoidance_t2_0_ID?x__ -> Update
		within
			Update
	)
	MemoryTransitions_opt_5(id__) =
	(
		let
			Update = 
			getWC.WC_TID_Movement_MovementAndAvoidance_t7_0_ID?WC_TID_Movement_MovementAndAvoidance_t7_0 ->
			Current(id__,
				 WC_TID_Movement_MovementAndAvoidance_t7_0)
			Current(id__,
				 WC_TID_Movement_MovementAndAvoidance_t7_0)
			 	   = 
			 	   (WC_TID_Movement_MovementAndAvoidance_t7_0)&(internal__!TID_Movement_Turning_t15 -> Update)
			 	   []
			 	   (WC_TID_Movement_MovementAndAvoidance_t7_0)&(internal__!TID_Movement_MovementAndAvoidance_t7 -> Update)
			 	   []
			 	   (WC_TID_Movement_MovementAndAvoidance_t7_0)&(internal__!TID_Movement_Turning_t13 -> Update)
			 	   	 []
			 	   	 startexec -> Update
			 	   	 
			 	   	 []
			 	   	 setWC.WC_TID_Movement_MovementAndAvoidance_t7_0_ID?x__ -> Update
		within
			Update
	)
	
	-- Memory cell processes
	Memory_opt_WC_TID_Movement_MovementAndAvoidance_t2_0(x__) = ( 
		getWC.WC_TID_Movement_MovementAndAvoidance_t2_0_ID!x__ -> Memory_opt_WC_TID_Movement_MovementAndAvoidance_t2_0(x__)
		[]
		setWC.WC_TID_Movement_MovementAndAvoidance_t2_0_ID?x__ -> Memory_opt_WC_TID_Movement_MovementAndAvoidance_t2_0(x__)
	)
	Memory_opt_turned(x__) = ( 
		get_turned!x__ -> Memory_opt_turned(x__)
		[]
		set_turned?x__ -> Memory_opt_turned(x__)
	)
	Memory_opt_WC_TID_Movement_MovementAndAvoidance_t8_0(x__) = ( 
		getWC.WC_TID_Movement_MovementAndAvoidance_t8_0_ID!x__ -> Memory_opt_WC_TID_Movement_MovementAndAvoidance_t8_0(x__)
		[]
		setWC.WC_TID_Movement_MovementAndAvoidance_t8_0_ID?x__ -> Memory_opt_WC_TID_Movement_MovementAndAvoidance_t8_0(x__)
	)
	Memory_opt_n(x__) = ( 
		get_n!x__ -> Memory_opt_n(x__)
		[]
		set_n?x__ -> Memory_opt_n(x__)
	)
	Memory_opt_neighbours(x__) = (
		get_neighbours!x__ -> Memory_opt_neighbours(x__)
		[]
		registerRead.i_neighbours?x__ -> Memory_opt_neighbours(x__)
	)
	Memory_opt_WC_TID_Movement_t1_0(x__) = ( 
		getWC.WC_TID_Movement_t1_0_ID!x__ -> Memory_opt_WC_TID_Movement_t1_0(x__)
		[]
		setWC.WC_TID_Movement_t1_0_ID?x__ -> Memory_opt_WC_TID_Movement_t1_0(x__)
	)
	Memory_opt_p(x__) = ( 
		get_p!x__ -> Memory_opt_p(x__)
		[]
		set_p?x__ -> Memory_opt_p(x__)
	)
	Memory_opt_WC_TID_Movement_MovementAndAvoidance_t7_0(x__) = ( 
		getWC.WC_TID_Movement_MovementAndAvoidance_t7_0_ID!x__ -> Memory_opt_WC_TID_Movement_MovementAndAvoidance_t7_0(x__)
		[]
		setWC.WC_TID_Movement_MovementAndAvoidance_t7_0_ID?x__ -> Memory_opt_WC_TID_Movement_MovementAndAvoidance_t7_0(x__)
	)
	Memory_opt_obstacle(x__) = (
		get_obstacle!x__ -> Memory_opt_obstacle(x__)
		[]
		registerRead.i_obstacle?x__ -> Memory_opt_obstacle(x__)
	)
	
	-- Composition of memory, StateMachine and Memory transition processes
	
	MemorySTM_opt(id__,cycle_RSMov_Movement_Movement,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) =
		dbisim(
		  sbisim(Memory_opt_turned(true)
		      	[| {|set_turned,get_turned|} |] 
		      	sbisim(	
		      	  dbisim(
		      	    sbisim(dbisim(
		      	      sbisim(Memory_opt_WC_TID_Movement_MovementAndAvoidance_t8_0(false)
		      	          	[| {|setWC.WC_TID_Movement_MovementAndAvoidance_t8_0_ID,getWC.WC_TID_Movement_MovementAndAvoidance_t8_0_ID|} |] 
		      	          	sbisim(	
		      	          	  dbisim(
		      	          	    sbisim(dbisim(
		      	          	      sbisim(Memory_opt_n(0)
		      	          	          	[| {|set_n,get_n|} |] 
		      	          	          	sbisim(	
		      	          	          	  dbisim(
		      	          	          	    sbisim(dbisim(
		      	          	          	      sbisim(Memory_opt_neighbours(false.0)
		      	          	          	          	[| {|registerRead.i_neighbours,get_neighbours|} |] 
		      	          	          	          	sbisim(	
		      	          	          	          	  dbisim(
		      	          	          	          	    sbisim(dbisim(
		      	          	          	          	      sbisim(Memory_opt_WC_TID_Movement_t1_0(false)
		      	          	          	          	          	[| {|getWC.WC_TID_Movement_t1_0_ID,setWC.WC_TID_Movement_t1_0_ID|} |] 
		      	          	          	          	          	sbisim(	
		      	          	          	          	          	  dbisim(
		      	          	          	          	          	    sbisim(dbisim(
		      	          	          	          	          	      sbisim(Memory_opt_WC_TID_Movement_MovementAndAvoidance_t2_0(false)
		      	          	          	          	          	          	[| {|getWC.WC_TID_Movement_MovementAndAvoidance_t2_0_ID,setWC.WC_TID_Movement_MovementAndAvoidance_t2_0_ID|} |] 
		      	          	          	          	          	          	dbisim(
		      	          	          	          	          	          	  sbisim(Memory_opt_obstacle(false.RSMov_Position_left)
		      	          	          	          	          	          	      	[| {|get_obstacle,registerRead.i_obstacle|} |] 
		      	          	          	          	          	          	      	sbisim(	
		      	          	          	          	          	          	      	  dbisim(
		      	          	          	          	          	          	      	    sbisim(dbisim(
		      	          	          	          	          	          	      	      sbisim(Memory_opt_WC_TID_Movement_MovementAndAvoidance_t7_0(false)
		      	          	          	          	          	          	      	          	[| {|setWC.WC_TID_Movement_MovementAndAvoidance_t7_0_ID,getWC.WC_TID_Movement_MovementAndAvoidance_t7_0_ID|} |] 
		      	          	          	          	          	          	      	          	sbisim(	
		      	          	          	          	          	          	      	          	  dbisim(
		      	          	          	          	          	          	      	          	    sbisim(sbisim(	
		      	          	          	          	          	          	      	          	      dbisim(
		      	          	          	          	          	          	      	          	        sbisim(dbisim(sbisim(Memory_opt_p(RSMov_Position_left)
		      	          	          	          	          	          	      	          	              	[| {|set_p,get_p|} |] 
		      	          	          	          	          	          	      	          	              	STM_core(id__,cycle_RSMov_Movement_Movement,
		      	          	          	          	          	          	      	          	              			    const_RSMov_Movement_MB,
		      	          	          	          	          	          	      	          	              			    const_RSMov_Movement_alpha)
		      	          	          	          	          	          	      	          	              	)\ {|set_p,get_p|}
		      	          	          	          	          	          	      	          	              )
		      	          	          	          	          	          	      	          	          	  [| union({|startexec|},{|internal__.TID_Movement_Turning_t9,internal__.TID_Movement_Turning_t5,internal__.TID_Movement_Turning_t4,internal__.TID_Movement_Turning_t1,internal__.TID_Movement_Turning_t0,internal__.TID_Movement_MovementAndAvoidance_t5,internal__.TID_Movement_Turning_t10,internal__.TID_Movement_t0,internal__.TID_Movement_MovementAndAvoidance_t0,internal__.TID_Movement_MovementAndAvoidance_t1,endexec__.TID_Movement_MovementAndAvoidance_t4,endexec__.TID_Movement_t5,endexec__.TID_Movement_MovementAndAvoidance_t6|}) |]
		      	          	          	          	          	          	      	          	          	  MemoryTransitions_opt_0(id__)
		      	          	          	          	          	          	      	          	          	  )\{|internal__.TID_Movement_Turning_t9,internal__.TID_Movement_Turning_t5,internal__.TID_Movement_Turning_t4,internal__.TID_Movement_Turning_t1,internal__.TID_Movement_Turning_t0,internal__.TID_Movement_MovementAndAvoidance_t5,internal__.TID_Movement_Turning_t10,internal__.TID_Movement_t0,internal__.TID_Movement_MovementAndAvoidance_t0,internal__.TID_Movement_MovementAndAvoidance_t1|})
		      	          	          	          	          	          	      	          	          	  [[ endexec__.TID_Movement_MovementAndAvoidance_t6 <- endexec ]]
		      	          	          	          	          	          	      	          	          	  [[ endexec__.TID_Movement_MovementAndAvoidance_t4 <- endexec ]]
		      	          	          	          	          	          	      	          	          	  [[ endexec__.TID_Movement_t5 <- endexec ]]
		      	          	          	          	          	          	      	          	          )
		      	          	          	          	          	          	      	          	      	  [| union({|startexec|},{|setWC.WC_TID_Movement_MovementAndAvoidance_t7_0_ID,internal__.TID_Movement_Turning_t15,internal__.TID_Movement_MovementAndAvoidance_t7,internal__.TID_Movement_Turning_t13|}) |]
		      	          	          	          	          	          	      	          	      	  MemoryTransitions_opt_5(id__)
		      	          	          	          	          	          	      	          	      	  )\{|internal__.TID_Movement_Turning_t15,internal__.TID_Movement_MovementAndAvoidance_t7,internal__.TID_Movement_Turning_t13|})
		      	          	          	          	          	          	      	          	      )
		      	          	          	          	          	          	      	          	) \ {|setWC.WC_TID_Movement_MovementAndAvoidance_t7_0_ID,getWC.WC_TID_Movement_MovementAndAvoidance_t7_0_ID|}
		      	          	          	          	          	          	      	          )
		      	          	          	          	          	          	      	      	  [| union({|startexec|},{|setWC.WC_TID_Movement_MovementAndAvoidance_t2_0_ID,internal__.TID_Movement_MovementAndAvoidance_t2,internal__.TID_Movement_MovementAndAvoidance_t3|}) |]
		      	          	          	          	          	          	      	      	  MemoryTransitions_opt_7(id__)
		      	          	          	          	          	          	      	      	  )\{|internal__.TID_Movement_MovementAndAvoidance_t2,internal__.TID_Movement_MovementAndAvoidance_t3|})
		      	          	          	          	          	          	      	      )
		      	          	          	          	          	          	      	) \ {|get_obstacle|}
		      	          	          	          	          	          	      )
		      	          	          	          	          	          	) \ {|getWC.WC_TID_Movement_MovementAndAvoidance_t2_0_ID,setWC.WC_TID_Movement_MovementAndAvoidance_t2_0_ID|}
		      	          	          	          	          	          )
		      	          	          	          	          	      	  [| union({|startexec|},{|setWC.WC_TID_Movement_t1_0_ID,internal__.TID_Movement_t1|}) |]
		      	          	          	          	          	      	  MemoryTransitions_opt_4(id__)
		      	          	          	          	          	      	  )\{|internal__.TID_Movement_t1|})
		      	          	          	          	          	      )
		      	          	          	          	          	) \ {|getWC.WC_TID_Movement_t1_0_ID,setWC.WC_TID_Movement_t1_0_ID|}
		      	          	          	          	          )
		      	          	          	          	      	  [| union({|startexec|},{|internal__.TID_Movement_t3,internal__.TID_Movement_t4|}) |]
		      	          	          	          	      	  MemoryTransitions_opt_3(id__)
		      	          	          	          	      	  )\{|internal__.TID_Movement_t3,internal__.TID_Movement_t4|})
		      	          	          	          	      )
		      	          	          	          	) \ {|get_neighbours|}
		      	          	          	          )
		      	          	          	      	  [| union({|startexec|},{|set_n,internal__.TID_Movement_Turning_t3,internal__.TID_Movement_Turning_t2|}) |]
		      	          	          	      	  MemoryTransitions_opt_6(id__,
		      	          	          	      	  	 const_RSMov_Movement_alpha)
		      	          	          	      	  )\{|internal__.TID_Movement_Turning_t3,internal__.TID_Movement_Turning_t2|})
		      	          	          	      )
		      	          	          	) \ {|set_n,get_n|}
		      	          	          )
		      	          	      	  [| union({|startexec|},{|setWC.WC_TID_Movement_MovementAndAvoidance_t8_0_ID,internal__.TID_Movement_MovementAndAvoidance_t8,internal__.TID_Movement_Turning_t16,internal__.TID_Movement_Turning_t12|}) |]
		      	          	      	  MemoryTransitions_opt_2(id__)
		      	          	      	  )\{|internal__.TID_Movement_MovementAndAvoidance_t8,internal__.TID_Movement_Turning_t16,internal__.TID_Movement_Turning_t12|})
		      	          	      )
		      	          	) \ {|setWC.WC_TID_Movement_MovementAndAvoidance_t8_0_ID,getWC.WC_TID_Movement_MovementAndAvoidance_t8_0_ID|}
		      	          )
		      	      	  [| union({|startexec|},{|set_turned,internal__.TID_Movement_t2|}) |]
		      	      	  MemoryTransitions_opt_1(id__)
		      	      	  )\{|internal__.TID_Movement_t2|})
		      	      )
		      	) \ {|set_turned,get_turned|}
		      )
	
	-- main process
	MachineMemorySyncSet = Union({
		union(
			union(
				{|get_n,set_n,
				get_p,set_p,
				get_turned,set_turned|},
				union({|get_obstacle,
				get_neighbours|},
					  {||}
					 )
			)
				
			,
			{|internal__.TID_Movement_MovementAndAvoidance_t0,
			internal__.TID_Movement_MovementAndAvoidance_t1,
			internal__.TID_Movement_MovementAndAvoidance_t2,
			internal__.TID_Movement_MovementAndAvoidance_t3,
			endexec__.TID_Movement_MovementAndAvoidance_t4,
			internal__.TID_Movement_MovementAndAvoidance_t5,
			endexec__.TID_Movement_MovementAndAvoidance_t6,
			internal__.TID_Movement_MovementAndAvoidance_t7,
			internal__.TID_Movement_MovementAndAvoidance_t8,
			internal__.TID_Movement_Turning_t0,
			internal__.TID_Movement_Turning_t1,
			internal__.TID_Movement_Turning_t2,
			internal__.TID_Movement_Turning_t3,
			internal__.TID_Movement_Turning_t9,
			internal__.TID_Movement_Turning_t10,
			internal__.TID_Movement_Turning_t12,
			internal__.TID_Movement_Turning_t13,
			internal__.TID_Movement_Turning_t15,
			internal__.TID_Movement_Turning_t16,
			internal__.TID_Movement_Turning_t4,
			internal__.TID_Movement_Turning_t5,
			internal__.TID_Movement_t0,
			internal__.TID_Movement_t1,
			internal__.TID_Movement_t2,
			internal__.TID_Movement_t4,
			internal__.TID_Movement_t3,
			endexec__.TID_Movement_t5|}
		),
		{|deadline|},
		WCresets
	})
	
	MachineMemoryHidingSet = Union({
		union(
			{|get_n,set_n,
			get_p,set_p,
			get_turned,set_turned|},
			union({|get_obstacle,
			get_neighbours|},
				  {||})
		)
		,
		{|deadline|}
	})
	
	MachineInternalEvents = {|
		internal__
	|}

	STM_core(id__,cycle_RSMov_Movement_Movement,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) =
		sbisim(	
			dbisim(
			(wbisim(STM(id__,
					    const_RSMov_Movement_MB,
					    const_RSMov_Movement_alpha))
			[| union(WCsync,WCresets) |]
			Clocks(id__,
					    const_RSMov_Movement_MB,
					    const_RSMov_Movement_alpha))\WCresets
			)
			[| union({|startexec|},union(Transitions,EndExecs)) |]
			(let
				TransitionController = startexec -> (RUN(Transitions) 
					 /\ ([] e : EndExecs @ e -> TransitionController))
			within 
			TransitionController))
		[| {| endexec,endexec__
			,registerWrite,startexec,terminate,tock |} |]
		cycle(cycle_RSMov_Movement_Movement)
	
	
	-- optimized main process
	AUX_opt(id__,cycle_RSMov_Movement_Movement,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) =
		prioritise(
		  dbisim(
			(MemorySTM_opt(id__,cycle_RSMov_Movement_Movement,
					    const_RSMov_Movement_MB,
					    const_RSMov_Movement_alpha))
			\union(union(MachineMemoryHidingSet,MachineInternalEvents),{|startexec|}))
			[|{|terminate|}|>SKIP
		,<{},{tock}>)
	
	-- main process
	AUX(id__,cycle_RSMov_Movement_Movement,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) =
		prioritise(
			(
		 		(
		 			cycle(cycle_RSMov_Movement_Movement)
		 			[| {| endexec,endexec__
		 					,registerRead
		 					,registerWrite,startexec,tock |} |]
		 			(MemoryN(id__,
		 					    const_RSMov_Movement_MB,
		 					    const_RSMov_Movement_alpha) 
		 	 		[| union(WCsets,WCsync) |] 
		 	 		Clocks(id__,
		 	 				    const_RSMov_Movement_MB,
		 	 				    const_RSMov_Movement_alpha)
		 			)\WCsets
		 		)
		 		[| union(MachineMemorySyncSet,{| startexec,endexec,endexec__
		 										 ,terminate |}) |]
		 		wbisim(STM(id__,
		 				    const_RSMov_Movement_MB,
		 				    const_RSMov_Movement_alpha))
			)[[ endexec__.x____ <- endexec | x____ <- TIDS ]]
		\union(union(MachineMemoryHidingSet,MachineInternalEvents),{|startexec|})
		[|{|terminate|}|>SKIP
		,<{},{tock}>)
	
	internal_(id__,cycle_RSMov_Movement_Movement,
			    const_RSMov_Movement_MB,
			    const_RSMov_Movement_alpha) =
		prioritise(
					(
				 		(
				 			cycle(cycle_RSMov_Movement_Movement)
				 			[| {| endexec,endexec__
				 					,registerRead
				 					,registerWrite,startexec,terminate,tock |} |]
				 			(MemoryN(id__,
				 					    const_RSMov_Movement_MB,
				 					    const_RSMov_Movement_alpha) 
				 	 		[| union(WCsets,WCsync) |] 
				 	 		Clocks(id__,
				 	 				    const_RSMov_Movement_MB,
				 	 				    const_RSMov_Movement_alpha)
				 			)\WCsets
				 		)
				 		[| union(MachineMemorySyncSet,{| startexec,endexec,endexec__
				 										  |}) |]
				 		wbisim(STM(id__,
				 				    const_RSMov_Movement_MB,
				 				    const_RSMov_Movement_alpha))
					)[[ endexec__.x____ <- endexec | x____ <- TIDS ]]
				\union(MachineMemoryHidingSet,{|startexec|})
				[|{|terminate|}|>SKIP
				,<Union({internal_events, ClockResets, {|internal__,terminate|}}),{tock}>)
	
	

	datatype SOutputEvents = SOutput_move
	
	cycle(cycle_RSMov_Movement_Movement) =
		let
			project(o_move.x__) = SOutput_move
	
			Cycle =
				(registerRead.i_obstacle?x__ -> SKIP
					||| registerRead.i_neighbours?x__ -> SKIP);
				startexec -> CollectOutputs(SOutputEvents);
				(wait(cycle_RSMov_Movement_Movement) [] terminate -> SKIP);
				Cycle
			
			CollectOutputs(sout) =
				(registerWrite?outp:{ outp | outc <- inter(sout,SOutputEvents), outp <- RegisterDataOutput,project(outp) == outc} -> CollectOutputs(diff(sout,{project(outp)}))
				[]
				endexec -> SKIP
				[]
				endexec__?x__ -> SKIP
	)
		within
			Cycle
			
	cycle_opt(cycle_RSMov_Movement_Movement) =
		let
			project(o_move.x__) = SOutput_move
	
			Cycle =
				(registerRead.i_obstacle?x__ -> SKIP
					||| registerRead.i_neighbours?x__ -> SKIP);
				startexec -> CollectOutputs(SOutputEvents);
				(wait(cycle_RSMov_Movement_Movement) [] terminate -> SKIP);
				Cycle
			
			CollectOutputs(sout) =
				(registerWrite?outp:{ outp | outc <- inter(sout,SOutputEvents), outp <- RegisterDataOutput,project(outp) == outc} -> CollectOutputs(diff(sout,{project(outp)}))
				[]
				endexec -> SKIP
				)
		within
			Cycle

	Timed(OneStep) {
		-- declare clocks
		datatype ClockSet = dummyC | CLID_MBC
		channel clockReset : ClockSet

		
		-- declare trigger deadlines channel
		channel deadline : TIDS.Signal

		-- compile clocks process
		
		-- set of strings that uniquely identify the waiting conditions, each of which is 
		-- used to synchronise with the Memory process to set the correspoding variable in
		-- the memory process.
		datatype setWC_identifierSet = dummyWC
		                             | WC_TID_Movement_MovementAndAvoidance_t8_0_ID
		                             | WC_TID_Movement_MovementAndAvoidance_t7_0_ID
		                             | WC_TID_Movement_t1_0_ID
		                             | WC_TID_Movement_MovementAndAvoidance_t2_0_ID
		
		-- declaring getWC and setWC channel for updating memory variables related to clocks
		channel setWC : setWC_identifierSet.Bool
		channel getWC : setWC_identifierSet.Bool
		
		-- Set of pairs capturing waiting condition processes and their alphabet.
		-- It includes the corresponding set of the defined operations.
		WCset(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = Union({
			{
			({|clockReset.CLID_MBC,setWC.WC_TID_Movement_MovementAndAvoidance_t7_0_ID,internal__.TID_Movement_MovementAndAvoidance_t7,internal__.TID_Movement_Turning_t15,internal__.TID_Movement_Turning_t13 | x <- SIDS|},P_WC_TID_Movement_MovementAndAvoidance_t7_0(id__,
					    const_RSMov_Movement_MB,
					    const_RSMov_Movement_alpha)),
			
			({|clockReset.CLID_MBC,internal__.TID_Movement_t1,setWC.WC_TID_Movement_t1_0_ID | x <- SIDS|},P_WC_TID_Movement_t1_0(id__,
					    const_RSMov_Movement_MB,
					    const_RSMov_Movement_alpha)),
			
			({|clockReset.CLID_MBC,setWC.WC_TID_Movement_MovementAndAvoidance_t2_0_ID,internal__.TID_Movement_MovementAndAvoidance_t2,internal__.TID_Movement_MovementAndAvoidance_t3 | x <- SIDS|},P_WC_TID_Movement_MovementAndAvoidance_t2_0(id__,
					    const_RSMov_Movement_MB,
					    const_RSMov_Movement_alpha)),
			
			({|clockReset.CLID_MBC,setWC.WC_TID_Movement_MovementAndAvoidance_t8_0_ID,internal__.TID_Movement_MovementAndAvoidance_t8,internal__.TID_Movement_Turning_t16,internal__.TID_Movement_Turning_t12 | x <- SIDS|},P_WC_TID_Movement_MovementAndAvoidance_t8_0(id__,
					    const_RSMov_Movement_MB,
					    const_RSMov_Movement_alpha))
			}
			})
		
		-- Auxiliary function to rename the channel set for required clocks.
		
		-- Set of transition events for which synchronisation is required between Clocks and the Memory process.
		-- It includes the corresponding set of the defined operations.
		WCsync = Union({
			{|internal__.TID_Movement_MovementAndAvoidance_t8,
			internal__.TID_Movement_Turning_t16,
			internal__.TID_Movement_MovementAndAvoidance_t7,
			internal__.TID_Movement_Turning_t15,
			internal__.TID_Movement_t1,
			internal__.TID_Movement_Turning_t12,
			internal__.TID_Movement_Turning_t13,
			internal__.TID_Movement_MovementAndAvoidance_t2,
			internal__.TID_Movement_MovementAndAvoidance_t3|}
			})
		-- Set of all clock resets, including 'clockReset.C' events and 'entered.x.y' events where x is drawn
		-- from the set of all state machine state identifiers. It includes the corresponding set of the defined operations.
		WCresets = Union({
			{|clockReset.CLID_MBC | x <- SIDS |}
			})
		-- Set of all waiting condition set events. It includes the corresponding set of the defined operations.
		WCsets = Union({
			{|setWC|}
			})
		
		P_WC_TID_Movement_MovementAndAvoidance_t7_0_reset(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = clockReset.CLID_MBC -> setWC.WC_TID_Movement_MovementAndAvoidance_t7_0_ID.true -> P_WC_TID_Movement_MovementAndAvoidance_t7_0_monitor(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
		
		P_WC_TID_Movement_MovementAndAvoidance_t7_0_monitor(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = (TimedInterrupt(RUN({|tock,internal__.TID_Movement_MovementAndAvoidance_t7,internal__.TID_Movement_Turning_t15,internal__.TID_Movement_Turning_t13|}),1) ; setWC.WC_TID_Movement_MovementAndAvoidance_t7_0_ID.false -> RUN({|tock,internal__.TID_Movement_MovementAndAvoidance_t7,internal__.TID_Movement_Turning_t15,internal__.TID_Movement_Turning_t13|})) /\ P_WC_TID_Movement_MovementAndAvoidance_t7_0_reset(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
		
		P_WC_TID_Movement_t1_0_reset(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = clockReset.CLID_MBC -> setWC.WC_TID_Movement_t1_0_ID.false -> P_WC_TID_Movement_t1_0_monitor(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
		
		P_WC_TID_Movement_t1_0_monitor(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = (TimedInterrupt(RUN({|tock,internal__.TID_Movement_t1|}),const_RSMov_Movement_MB) ; setWC.WC_TID_Movement_t1_0_ID.true -> RUN({|tock,internal__.TID_Movement_t1|})) /\ P_WC_TID_Movement_t1_0_reset(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
		
		P_WC_TID_Movement_MovementAndAvoidance_t2_0_reset(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = clockReset.CLID_MBC -> setWC.WC_TID_Movement_MovementAndAvoidance_t2_0_ID.true -> P_WC_TID_Movement_MovementAndAvoidance_t2_0_monitor(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
		
		P_WC_TID_Movement_MovementAndAvoidance_t2_0_monitor(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = (TimedInterrupt(RUN({|tock,internal__.TID_Movement_MovementAndAvoidance_t2,internal__.TID_Movement_MovementAndAvoidance_t3|}),2) ; setWC.WC_TID_Movement_MovementAndAvoidance_t2_0_ID.false -> RUN({|tock,internal__.TID_Movement_MovementAndAvoidance_t2,internal__.TID_Movement_MovementAndAvoidance_t3|})) /\ P_WC_TID_Movement_MovementAndAvoidance_t2_0_reset(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
		
		P_WC_TID_Movement_MovementAndAvoidance_t8_0_reset(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = clockReset.CLID_MBC -> setWC.WC_TID_Movement_MovementAndAvoidance_t8_0_ID.false -> P_WC_TID_Movement_MovementAndAvoidance_t8_0_monitor(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
		
		P_WC_TID_Movement_MovementAndAvoidance_t8_0_monitor(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = (TimedInterrupt(RUN({|tock,internal__.TID_Movement_MovementAndAvoidance_t8,internal__.TID_Movement_Turning_t16,internal__.TID_Movement_Turning_t12|}),1) ; setWC.WC_TID_Movement_MovementAndAvoidance_t8_0_ID.true -> RUN({|tock,internal__.TID_Movement_MovementAndAvoidance_t8,internal__.TID_Movement_Turning_t16,internal__.TID_Movement_Turning_t12|})) /\ P_WC_TID_Movement_MovementAndAvoidance_t8_0_reset(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
		
		P_WC_TID_Movement_MovementAndAvoidance_t7_0(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = setWC.WC_TID_Movement_MovementAndAvoidance_t7_0_ID.true -> P_WC_TID_Movement_MovementAndAvoidance_t7_0_monitor(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
		
		P_WC_TID_Movement_t1_0(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = setWC.WC_TID_Movement_t1_0_ID.false -> P_WC_TID_Movement_t1_0_monitor(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
		
		P_WC_TID_Movement_MovementAndAvoidance_t2_0(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = setWC.WC_TID_Movement_MovementAndAvoidance_t2_0_ID.true -> P_WC_TID_Movement_MovementAndAvoidance_t2_0_monitor(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
		
		P_WC_TID_Movement_MovementAndAvoidance_t8_0(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = setWC.WC_TID_Movement_MovementAndAvoidance_t8_0_ID.false -> P_WC_TID_Movement_MovementAndAvoidance_t8_0_monitor(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
		
		-- Clocks process
		Clocks(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = || (alpha, P) : WCset(id__,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) @ [alpha] wbisim(P)

		-- collects all clockResets including those of operations
		ClockResets = Union({
			{|clockReset|}
					})

		-- With no internal events visible
		Dunopt__(id__,cycle_RSMov_Movement_Movement,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = timed_priority(AUX(id__,cycle_RSMov_Movement_Movement,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) \ union(internal_events,ClockResets))

		D__(id__,cycle_RSMov_Movement_Movement,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = timed_priority(AUX_opt(id__,cycle_RSMov_Movement_Movement,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) \ union(internal_events,ClockResets))

		O__(id__,cycle_RSMov_Movement_Movement,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = D__(id__,cycle_RSMov_Movement_Movement,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)

		-- With enter/entered/exit/exited events visible
		FVS__(id__,cycle_RSMov_Movement_Movement,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = timed_priority(AUX(id__,cycle_RSMov_Movement_Movement,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) \ ClockResets)

		-- With enterV/enteredV/exitV/exitedV events visible
		VS__(id__,cycle_RSMov_Movement_Movement,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = ShowV(timed_priority(AUX(id__,cycle_RSMov_Movement_Movement,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) \ ClockResets))

		-- With clock resets visible
		FVS_C__(id__,cycle_RSMov_Movement_Movement,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha) = AUX(id__,cycle_RSMov_Movement_Movement,
				    const_RSMov_Movement_MB,
				    const_RSMov_Movement_alpha)
		}
endmodule
